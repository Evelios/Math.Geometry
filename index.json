[{"uri":"/fsharp-geometry/reference/fsharp-extensions.html","title":"FSharp.Extensions","content":"List \nTuple2 \nTuple3"},{"uri":"/fsharp-geometry/reference/geometry.html","title":"Geometry","content":"Angle \nArc2D \nAxis2D \nBoolean2D \nBoundingBox2D \nCircle2D \nDirection2D \nEllipse2D \nFloat \nFrame2D \nIntersection2D \nInterval \nLength \nLine2D \nLineSegment2D \nPercent \nPoint2D \nPolygon2D \nPolyline2D \nRectangle2D \nSize2D \nSweptAngle \nTriangle2D \nVector2D \nAngle \nArc2D\u003C\u0027Unit, \u0027Coordinates\u003E \nAxis2D\u003C\u0027Unit, \u0027Coordinates\u003E \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E \nCircle2D\u003C\u0027Unit, \u0027Coordinates\u003E \nDirection2D\u003C\u0027Coordinates\u003E \nEllipse2D\u003C\u0027Unit, \u0027Coordinates\u003E \nFloat \nFrame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E \nInterval\u003C\u0027T\u003E \nLength\u003C\u0027Unit\u003E \nLine2D\u003C\u0027Unit, \u0027Coordinates\u003E \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E \nMeters \nNondegenerate\u003C\u0027Unit, \u0027Coordinates\u003E \nPercent \nPixels \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E \nPolygon2D\u003C\u0027Unit, \u0027Coordinates\u003E \nPolyline2D\u003C\u0027Unit, \u0027Coordinates\u003E \nRectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E \nSize2D\u003C\u0027Unit\u003E \nSweptAngle \nTriangle2D\u003C\u0027Unit, \u0027Coordinates\u003E \nUnitless \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E"},{"uri":"/fsharp-geometry/reference/geometry-internal.html","title":"Geometry.Internal","content":"BoundingBox2D"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html","title":"List","content":"List \n \nList.concatIf \nconcatIf \nList.appendIf \nappendIf \nList.appendWhenSome \nappendWhenSome \nList.consWhenSome \nconsWhenSome \nList.filterMap \nfilterMap \nList.cartesian \ncartesian \nList.pairs \npairs \nList.filterNone \nfilterNone"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#concatIf","title":"List.concatIf","content":"List.concatIf \nconcatIf \n\n Append the first list if the condition is met\n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#appendIf","title":"List.appendIf","content":"List.appendIf \nappendIf \n\n Append the first list if the condition is met\n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#appendWhenSome","title":"List.appendWhenSome","content":"List.appendWhenSome \nappendWhenSome \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#consWhenSome","title":"List.consWhenSome","content":"List.consWhenSome \nconsWhenSome \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#filterMap","title":"List.filterMap","content":"List.filterMap \nfilterMap \n\n Perform a mapping operation on a list and filter out all values that are None\n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#cartesian","title":"List.cartesian","content":"List.cartesian \ncartesian \n\n Get the cartesian product of the two lists\n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#pairs","title":"List.pairs","content":"List.pairs \npairs \n\n Get all unique pairs of a list\n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-list.html#filterNone","title":"List.filterNone","content":"List.filterNone \nfilterNone \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html","title":"Tuple2","content":"Tuple2 \n \nTuple2.pair \npair \nTuple2.replicate \nreplicate \nTuple2.curry \ncurry \nTuple2.uncurry \nuncurry \nTuple2.swap \nswap \nTuple2.map \nmap \nTuple2.mapFst \nmapFst \nTuple2.mapSnd \nmapSnd \nTuple2.mapBoth \nmapBoth \nTuple2.extendFst \nextendFst \nTuple2.extendSnd \nextendSnd \nTuple2.optionOfFst \noptionOfFst \nTuple2.optionOfSnd \noptionOfSnd \nTuple2.toList \ntoList"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#pair","title":"Tuple2.pair","content":"Tuple2.pair \npair \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#replicate","title":"Tuple2.replicate","content":"Tuple2.replicate \nreplicate \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#curry","title":"Tuple2.curry","content":"Tuple2.curry \ncurry \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#uncurry","title":"Tuple2.uncurry","content":"Tuple2.uncurry \nuncurry \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#swap","title":"Tuple2.swap","content":"Tuple2.swap \nswap \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#map","title":"Tuple2.map","content":"Tuple2.map \nmap \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#mapFst","title":"Tuple2.mapFst","content":"Tuple2.mapFst \nmapFst \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#mapSnd","title":"Tuple2.mapSnd","content":"Tuple2.mapSnd \nmapSnd \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#mapBoth","title":"Tuple2.mapBoth","content":"Tuple2.mapBoth \nmapBoth \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#extendFst","title":"Tuple2.extendFst","content":"Tuple2.extendFst \nextendFst \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#extendSnd","title":"Tuple2.extendSnd","content":"Tuple2.extendSnd \nextendSnd \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#optionOfFst","title":"Tuple2.optionOfFst","content":"Tuple2.optionOfFst \noptionOfFst \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#optionOfSnd","title":"Tuple2.optionOfSnd","content":"Tuple2.optionOfSnd \noptionOfSnd \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple2.html#toList","title":"Tuple2.toList","content":"Tuple2.toList \ntoList \n"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple3.html","title":"Tuple3","content":"Tuple3 \n \nTuple3.map \nmap"},{"uri":"/fsharp-geometry/reference/fsharp-extensions-tuple3.html#map","title":"Tuple3.map","content":"Tuple3.map \nmap \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html","title":"Angle","content":"Angle \n \nAngle.zero \nzero \nAngle.pi \npi \nAngle.twoPi \ntwoPi \nAngle.piOverTwo \npiOverTwo \nAngle.halfPi \nhalfPi \nAngle.radiansToDegrees \nradiansToDegrees \nAngle.degreesToRadians \ndegreesToRadians \nAngle.radians \nradians \nAngle.degrees \ndegrees \nAngle.inDegrees \ninDegrees \nAngle.inRadians \ninRadians \nAngle.abs \nabs \nAngle.half \nhalf \nAngle.twice \ntwice \nAngle.min \nmin \nAngle.max \nmax \nAngle.sin \nsin \nAngle.cos \ncos \nAngle.tan \ntan \nAngle.asin \nasin \nAngle.acos \nacos \nAngle.atan \natan"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#zero","title":"Angle.zero","content":"Angle.zero \nzero \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#pi","title":"Angle.pi","content":"Angle.pi \npi \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#twoPi","title":"Angle.twoPi","content":"Angle.twoPi \ntwoPi \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#piOverTwo","title":"Angle.piOverTwo","content":"Angle.piOverTwo \npiOverTwo \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#halfPi","title":"Angle.halfPi","content":"Angle.halfPi \nhalfPi \n\n Alias for \u0060piOverTwo\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#radiansToDegrees","title":"Angle.radiansToDegrees","content":"Angle.radiansToDegrees \nradiansToDegrees \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#degreesToRadians","title":"Angle.degreesToRadians","content":"Angle.degreesToRadians \ndegreesToRadians \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#radians","title":"Angle.radians","content":"Angle.radians \nradians \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#degrees","title":"Angle.degrees","content":"Angle.degrees \ndegrees \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#inDegrees","title":"Angle.inDegrees","content":"Angle.inDegrees \ninDegrees \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#inRadians","title":"Angle.inRadians","content":"Angle.inRadians \ninRadians \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#abs","title":"Angle.abs","content":"Angle.abs \nabs \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#half","title":"Angle.half","content":"Angle.half \nhalf \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#twice","title":"Angle.twice","content":"Angle.twice \ntwice \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#min","title":"Angle.min","content":"Angle.min \nmin \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#max","title":"Angle.max","content":"Angle.max \nmax \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#sin","title":"Angle.sin","content":"Angle.sin \nsin \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#cos","title":"Angle.cos","content":"Angle.cos \ncos \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#tan","title":"Angle.tan","content":"Angle.tan \ntan \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#asin","title":"Angle.asin","content":"Angle.asin \nasin \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#acos","title":"Angle.acos","content":"Angle.acos \nacos \n"},{"uri":"/fsharp-geometry/reference/geometry-anglemodule.html#atan","title":"Angle.atan","content":"Angle.atan \natan \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html","title":"Arc2D","content":"Arc2D \n \nArc2D.from \nfrom \nArc2D.withCenterPoint \nwithCenterPoint \nArc2D.sweptAround \nsweptAround \nArc2D.throughPoints \nthroughPoints \nArc2D.withRadius \nwithRadius \nArc2D.withSweptAngle \nwithSweptAngle \nArc2D.centerPoint \ncenterPoint \nArc2D.radius \nradius \nArc2D.sweptAngle \nsweptAngle \nArc2D.pointOn \npointOn \nArc2D.startPoint \nstartPoint \nArc2D.midpoint \nmidpoint \nArc2D.endPoint \nendPoint \nArc2D.boundingBox \nboundingBox \nArc2D.firstDerivative \nfirstDerivative \nArc2D.nondegenerate \nnondegenerate \nArc2D.fromNondegenerate \nfromNondegenerate \nArc2D.tangentDirection \ntangentDirection \nArc2D.sample \nsample \nArc2D.reverse \nreverse \nArc2D.scaleAbout \nscaleAbout \nArc2D.rotateAround \nrotateAround \nArc2D.translateBy \ntranslateBy \nArc2D.translateIn \ntranslateIn \nArc2D.mirrorAcross \nmirrorAcross \nArc2D.relativeTo \nrelativeTo \nArc2D.placeIn \nplaceIn"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#from","title":"Arc2D.from","content":"Arc2D.from \nfrom \n\n Construct an arc with from the first given point to the second, with the\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#withCenterPoint","title":"Arc2D.withCenterPoint","content":"Arc2D.withCenterPoint \nwithCenterPoint \n\n Construct an arc with the given center point, radius, start angle and swept\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#sweptAround","title":"Arc2D.sweptAround","content":"Arc2D.sweptAround \nsweptAround \n\n Construct an arc by sweeping (rotating) a given start point around a given\n center point by a given angle. The center point to sweep around is given first\n and the start point to be swept is given last.\n\n A positive swept angle means that the arc is formed by rotating the start point\n counterclockwise around the center point. A negative swept angle results in\n a clockwise arc instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#throughPoints","title":"Arc2D.throughPoints","content":"Arc2D.throughPoints \nthroughPoints \n\n Attempt to construct an arc that starts at the first given point, passes\n through the second given point and ends at the third given point:\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#withRadius","title":"Arc2D.withRadius","content":"Arc2D.withRadius \nwithRadius \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#withSweptAngle","title":"Arc2D.withSweptAngle","content":"Arc2D.withSweptAngle \nwithSweptAngle \n\n Construct an arc with the given center point, radius, start angle and swept\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#centerPoint","title":"Arc2D.centerPoint","content":"Arc2D.centerPoint \ncenterPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#radius","title":"Arc2D.radius","content":"Arc2D.radius \nradius \n\n Get the radius of an arc.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#sweptAngle","title":"Arc2D.sweptAngle","content":"Arc2D.sweptAngle \nsweptAngle \n\n Get the swept angle of an arc. The result will be positive for a\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#pointOn","title":"Arc2D.pointOn","content":"Arc2D.pointOn \npointOn \n\n Get the point along an arc at a given parameter value.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#startPoint","title":"Arc2D.startPoint","content":"Arc2D.startPoint \nstartPoint \n\n Get the start point of an arc.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#midpoint","title":"Arc2D.midpoint","content":"Arc2D.midpoint \nmidpoint \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#endPoint","title":"Arc2D.endPoint","content":"Arc2D.endPoint \nendPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#boundingBox","title":"Arc2D.boundingBox","content":"Arc2D.boundingBox \nboundingBox \n\n Get a bounding box for a given arc.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#firstDerivative","title":"Arc2D.firstDerivative","content":"Arc2D.firstDerivative \nfirstDerivative \n\n Get the first derivative of an arc at a given parameter value.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#nondegenerate","title":"Arc2D.nondegenerate","content":"Arc2D.nondegenerate \nnondegenerate \n\n Attempt to construct a non-degenerate arc from a general \u0060Arc2d\u0060. If the arc\n is in fact degenerate (consists of a single point), returns an \u0060Err\u0060 with that\n point.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#fromNondegenerate","title":"Arc2D.fromNondegenerate","content":"Arc2D.fromNondegenerate \nfromNondegenerate \n\n Convert a nondegenerate arc back to a general \u0060Arc2d\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#tangentDirection","title":"Arc2D.tangentDirection","content":"Arc2D.tangentDirection \ntangentDirection \n\n  Get the tangent direction to a nondegenerate arc at a given parameter\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#sample","title":"Arc2D.sample","content":"Arc2D.sample \nsample \n\n Get both the point and tangent direction of a nondegenerate arc at a given\n parameter value.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#reverse","title":"Arc2D.reverse","content":"Arc2D.reverse \nreverse \n\n Reverse the direction of an arc, so that the start point becomes the end\n point and vice versa.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#scaleAbout","title":"Arc2D.scaleAbout","content":"Arc2D.scaleAbout \nscaleAbout \n\n Scale an arc about a given point by a given scale.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#rotateAround","title":"Arc2D.rotateAround","content":"Arc2D.rotateAround \nrotateAround \n\n Rotate an arc around a given point by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#translateBy","title":"Arc2D.translateBy","content":"Arc2D.translateBy \ntranslateBy \n\n Translate an arc by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#translateIn","title":"Arc2D.translateIn","content":"Arc2D.translateIn \ntranslateIn \n\n Translate an arc in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#mirrorAcross","title":"Arc2D.mirrorAcross","content":"Arc2D.mirrorAcross \nmirrorAcross \n\n Mirror an arc across a given axis. This negates the sign of the arc\u0027s\n swept angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#relativeTo","title":"Arc2D.relativeTo","content":"Arc2D.relativeTo \nrelativeTo \n\n Take an arc defined in global coordinates, and return it expressed in local\n coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-arc2dmodule.html#placeIn","title":"Arc2D.placeIn","content":"Arc2D.placeIn \nplaceIn \n\n Take an arc considered to be defined in local coordinates relative to a\n given reference frame, and return that arc expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html","title":"Axis2D","content":"Axis2D \n \nAxis2D.through \nthrough \nAxis2D.x \nx \nAxis2D.y \ny \nAxis2D.withDirection \nwithDirection \nAxis2D.throughPoints \nthroughPoints \nAxis2D.originPoint \noriginPoint \nAxis2D.direction \ndirection \nAxis2D.reverse \nreverse \nAxis2D.moveTo \nmoveTo \nAxis2D.rotateAround \nrotateAround \nAxis2D.rotateBy \nrotateBy \nAxis2D.translateBy \ntranslateBy \nAxis2D.translateIn \ntranslateIn \nAxis2D.mirrorAcross \nmirrorAcross \nAxis2D.relativeTo \nrelativeTo \nAxis2D.placeIn \nplaceIn"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#through","title":"Axis2D.through","content":"Axis2D.through \nthrough \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#x","title":"Axis2D.x","content":"Axis2D.x \nx \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#y","title":"Axis2D.y","content":"Axis2D.y \ny \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#withDirection","title":"Axis2D.withDirection","content":"Axis2D.withDirection \nwithDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#throughPoints","title":"Axis2D.throughPoints","content":"Axis2D.throughPoints \nthroughPoints \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#originPoint","title":"Axis2D.originPoint","content":"Axis2D.originPoint \noriginPoint \n\n Get the origin point of the axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#direction","title":"Axis2D.direction","content":"Axis2D.direction \ndirection \n\n Get the direction of the axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#reverse","title":"Axis2D.reverse","content":"Axis2D.reverse \nreverse \n\n Reverse the direction of the axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#moveTo","title":"Axis2D.moveTo","content":"Axis2D.moveTo \nmoveTo \n\n Move the origin to have a different origin point but the same direction.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#rotateAround","title":"Axis2D.rotateAround","content":"Axis2D.rotateAround \nrotateAround \n\n Rotate an axis around a given center point by a given angle. Rotates the\n axis\u0027 origin point around the given point by the given angle and the axis\u0027\n direction by the given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#rotateBy","title":"Axis2D.rotateBy","content":"Axis2D.rotateBy \nrotateBy \n\n Rotate an axis around its own origin point by the given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#translateBy","title":"Axis2D.translateBy","content":"Axis2D.translateBy \ntranslateBy \n\n Translate an axis by a given displacement. Applies the given displacement to\n the axis\u0027 origin point and leaves the direction unchanged.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#translateIn","title":"Axis2D.translateIn","content":"Axis2D.translateIn \ntranslateIn \n\n Translate an axis in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#mirrorAcross","title":"Axis2D.mirrorAcross","content":"Axis2D.mirrorAcross \nmirrorAcross \n\n Mirror one axis across another. The axis to mirror across is given first and\n the axis to mirror is given second.\n     Axis2D.mirrorAcross Axis2D.x exampleAxis\n     --\u003E Axis2D.through (Point2D.meters 1. -3.)\n     --\u003E     (Direction2D.degrees -30.)\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#relativeTo","title":"Axis2D.relativeTo","content":"Axis2D.relativeTo \nrelativeTo \n\n Take an axis defined in global coordinates, and return it expressed in local\n coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-axis2dmodule.html#placeIn","title":"Axis2D.placeIn","content":"Axis2D.placeIn \nplaceIn \n\n Take an axis defined in local coordinates relative to a given reference\n frame, and return that axis expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-boolean2d.html","title":"Boolean2D","content":"Boolean2D \n \nBoolean2D.boundingBoxAndLine \nboundingBoxAndLine"},{"uri":"/fsharp-geometry/reference/geometry-boolean2d.html#boundingBoxAndLine","title":"Boolean2D.boundingBoxAndLine","content":"Boolean2D.boundingBoxAndLine \nboundingBoxAndLine \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html","title":"BoundingBox2D","content":"BoundingBox2D \n \nBoundingBox2D.empty \nempty \nBoundingBox2D.from \nfrom \nBoundingBox2D.fromExtrema \nfromExtrema \nBoundingBox2D.withDimensions \nwithDimensions \nBoundingBox2D.singleton \nsingleton \nBoundingBox2D.corners \ncorners \nBoundingBox2D.width \nwidth \nBoundingBox2D.height \nheight \nBoundingBox2D.minX \nminX \nBoundingBox2D.maxX \nmaxX \nBoundingBox2D.minY \nminY \nBoundingBox2D.maxY \nmaxY \nBoundingBox2D.dimensions \ndimensions \nBoundingBox2D.midX \nmidX \nBoundingBox2D.midY \nmidY \nBoundingBox2D.centerPoint \ncenterPoint \nBoundingBox2D.containingPoint \ncontainingPoint \nBoundingBox2D.containingPoints \ncontainingPoints \nBoundingBox2D.scaleAbout \nscaleAbout \nBoundingBox2D.translateBy \ntranslateBy \nBoundingBox2D.translateIn \ntranslateIn \nBoundingBox2D.unsafeOffsetBy \nunsafeOffsetBy \nBoundingBox2D.offsetBy \noffsetBy \nBoundingBox2D.expandBy \nexpandBy \nBoundingBox2D.lineSegments \nlineSegments \nBoundingBox2D.hull \nhull \nBoundingBox2D.hullOf \nhullOf \nBoundingBox2D.hull3 \nhull3 \nBoundingBox2D.hullN \nhullN \nBoundingBox2D.hullOfN \nhullOfN \nBoundingBox2D.aggregate \naggregate \nBoundingBox2D.aggregateOf \naggregateOf \nBoundingBox2D.aggregate3 \naggregate3 \nBoundingBox2D.aggregateN \naggregateN \nBoundingBox2D.aggregateOfN \naggregateOfN \nBoundingBox2D.isContainedIn \nisContainedIn \nBoundingBox2D.contains \ncontains \nBoundingBox2D.intersects \nintersects \nBoundingBox2D.intersection \nintersection \nBoundingBox2D.overlappingByAtLeast \noverlappingByAtLeast \nBoundingBox2D.separatedByAtLeast \nseparatedByAtLeast \nBoundingBox2D.union \nunion"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#empty","title":"BoundingBox2D.empty","content":"BoundingBox2D.empty \nempty \n\n Creates an infinitely small bounding box. This can be used when growing a bounding box around objects\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#from","title":"BoundingBox2D.from","content":"BoundingBox2D.from \nfrom \n\n Create a bounding box that contains the two points\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#fromExtrema","title":"BoundingBox2D.fromExtrema","content":"BoundingBox2D.fromExtrema \nfromExtrema \n\n If the minimum and maximum values are provided in the wrong order (for example\n if \u0060minX\u0060 is greater than \u0060maxX\u0060), then they will be swapped so that the\n resulting bounding box is valid.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#withDimensions","title":"BoundingBox2D.withDimensions","content":"BoundingBox2D.withDimensions \nwithDimensions \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#singleton","title":"BoundingBox2D.singleton","content":"BoundingBox2D.singleton \nsingleton \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#corners","title":"BoundingBox2D.corners","content":"BoundingBox2D.corners \ncorners \n\n Returned in clockwise order from top left rotating around clockwise\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#width","title":"BoundingBox2D.width","content":"BoundingBox2D.width \nwidth \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#height","title":"BoundingBox2D.height","content":"BoundingBox2D.height \nheight \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#minX","title":"BoundingBox2D.minX","content":"BoundingBox2D.minX \nminX \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#maxX","title":"BoundingBox2D.maxX","content":"BoundingBox2D.maxX \nmaxX \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#minY","title":"BoundingBox2D.minY","content":"BoundingBox2D.minY \nminY \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#maxY","title":"BoundingBox2D.maxY","content":"BoundingBox2D.maxY \nmaxY \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#dimensions","title":"BoundingBox2D.dimensions","content":"BoundingBox2D.dimensions \ndimensions \n\n Get the X and Y dimensions (width and height) of a bounding box.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#midX","title":"BoundingBox2D.midX","content":"BoundingBox2D.midX \nmidX \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#midY","title":"BoundingBox2D.midY","content":"BoundingBox2D.midY \nmidY \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#centerPoint","title":"BoundingBox2D.centerPoint","content":"BoundingBox2D.centerPoint \ncenterPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#containingPoint","title":"BoundingBox2D.containingPoint","content":"BoundingBox2D.containingPoint \ncontainingPoint \n\n Get a bounding box that contains the new point. If the box does not contain the new point, the box will grow\n to fit the new point. If the point is within the box, the same bounding box is returned.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#containingPoints","title":"BoundingBox2D.containingPoints","content":"BoundingBox2D.containingPoints \ncontainingPoints \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#scaleAbout","title":"BoundingBox2D.scaleAbout","content":"BoundingBox2D.scaleAbout \nscaleAbout \n\n Scale a bounding box about a given point by a given scale.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#translateBy","title":"BoundingBox2D.translateBy","content":"BoundingBox2D.translateBy \ntranslateBy \n\n Translate a bounding box by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#translateIn","title":"BoundingBox2D.translateIn","content":"BoundingBox2D.translateIn \ntranslateIn \n\n Translate a bounding box in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#unsafeOffsetBy","title":"BoundingBox2D.unsafeOffsetBy","content":"BoundingBox2D.unsafeOffsetBy \nunsafeOffsetBy \n\n Offsets boundingBox irrespective of the resulting bounding box is valid or\n not.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#offsetBy","title":"BoundingBox2D.offsetBy","content":"BoundingBox2D.offsetBy \noffsetBy \n\n Expand or shrink the given bounding box in all the directions by the given\n distance. A positive offset will cause the bounding box to expand and a negative\n value will cause it to shrink.\n Returns \u0060None\u0060 if the offset is negative and large enough to cause the\n bounding box to vanish (that is, if the offset is larger than half the height or\n half the width of the bounding box, whichever is less).\n If you only want to expand a bounding box, you can use\n [\u0060expandBy\u0060](BoundingBox2d#expandBy) instead (which does not return an \u0060Option\u0060).\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#expandBy","title":"BoundingBox2D.expandBy","content":"BoundingBox2D.expandBy \nexpandBy \n\n Expand the given bounding box in all directions by the given offset:\n Negative offsets will be treated as positive (the absolute value will be used),\n so the resulting box will always be at least as large as the original. If you\n need to be able to contract a bounding box, use\n [\u0060offsetBy\u0060](BoundingBox2d#offsetBy) instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#lineSegments","title":"BoundingBox2D.lineSegments","content":"BoundingBox2D.lineSegments \nlineSegments \n\n Get the four line segments surrounding the bounding box. The lines are created from the top left point, creating\n line segments around the bounding box clockwise.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#hull","title":"BoundingBox2D.hull","content":"BoundingBox2D.hull \nhull \n\n Find the bounding box containing one or more input points.\n Often ends up being used within a match expression.\n See also [\u0060hullN\u0060](#hullN).\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#hullOf","title":"BoundingBox2D.hullOf","content":"BoundingBox2D.hullOf \nhullOf \n\n Like [\u0060hull\u0060](#hull), but lets you work on any kind of item as long as a\n point can be extracted from it. For example, if you had\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#hull3","title":"BoundingBox2D.hull3","content":"BoundingBox2D.hull3 \nhull3 \n\n Build a bounding box that contains all three of the given points.\n This is equivalent to calling \u0060hull\u0060 on three points but is more efficient.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#hullN","title":"BoundingBox2D.hullN","content":"BoundingBox2D.hullN \nhullN \n\n Construct a bounding box containing all _N_ points in the given list. If the\n list is empty, returns \u0060Nothing\u0060. If you know you have at least one point, you\n can use [\u0060hull\u0060](#hull) instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#hullOfN","title":"BoundingBox2D.hullOfN","content":"BoundingBox2D.hullOfN \nhullOfN \n\n Combination of [\u0060hullOf\u0060](#hullOf) and [\u0060hullN\u0060](#hullN).\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#aggregate","title":"BoundingBox2D.aggregate","content":"BoundingBox2D.aggregate \naggregate \n\n Find the bounding box containing one or more input boxes; works much like\n [\u0060hull\u0060](#hull). See also [\u0060aggregateN\u0060](#aggregateN).\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#aggregateOf","title":"BoundingBox2D.aggregateOf","content":"BoundingBox2D.aggregateOf \naggregateOf \n\n Like [\u0060aggregate\u0060](#aggregate), but lets you work on any kind of item as\n long as a bounding box can be extracted from it.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#aggregate3","title":"BoundingBox2D.aggregate3","content":"BoundingBox2D.aggregate3 \naggregate3 \n\n Build a bounding box that contains all three of the given bounding boxes.\n This is equivalent to running \u0060aggregate\u0060 with three points but is more\n efficient.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#aggregateN","title":"BoundingBox2D.aggregateN","content":"BoundingBox2D.aggregateN \naggregateN \n\n Construct a bounding box containing all bounding boxes in the given list. If\n the list is empty, returns \u0060Nothing\u0060. If you know you have at least one bounding\n box, you can use [\u0060aggregate\u0060](#aggregate) instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#aggregateOfN","title":"BoundingBox2D.aggregateOfN","content":"BoundingBox2D.aggregateOfN \naggregateOfN \n\n Combination of [\u0060aggregateOf\u0060](#aggregateOf) and [\u0060aggregateN\u0060](#aggregateN).\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#isContainedIn","title":"BoundingBox2D.isContainedIn","content":"BoundingBox2D.isContainedIn \nisContainedIn \n\n Test to see if the target bounding box is contained withing the bounding box\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#contains","title":"BoundingBox2D.contains","content":"BoundingBox2D.contains \ncontains \n\n Test to see if the target bounding box is contained withing the bounding box\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#intersects","title":"BoundingBox2D.intersects","content":"BoundingBox2D.intersects \nintersects \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#intersection","title":"BoundingBox2D.intersection","content":"BoundingBox2D.intersection \nintersection \n\n Attempt to build a bounding box that contains all points common to both\n given bounding boxes. If the given boxes do not intersect, returns \u0060Nothing\u0060.\n If two boxes just touch along an edge or at a corner, they are still considered\n to have an intersection, even though that intersection will have zero area (at\n least one of its dimensions will be zero).\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#overlappingByAtLeast","title":"BoundingBox2D.overlappingByAtLeast","content":"BoundingBox2D.overlappingByAtLeast \noverlappingByAtLeast \n\n Check two boxes overlap by at least the given amount. For example, you could\n implement a tolerant collision check (one that only returns true if the boxes\n overlap by at least a millimeter, and ignores boxes that just barely touch each\n other).\n\n Overlap is defined as the _minimum_ distance one box would have to move so that\n it did not touch the other. Boxes that just touch are considered to have an\n overlap of zero.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#separatedByAtLeast","title":"BoundingBox2D.separatedByAtLeast","content":"BoundingBox2D.separatedByAtLeast \nseparatedByAtLeast \n\n Check if two boxes are separated by at least the given amount. For example,\n to perform clash detection between some objects, you could use \u0060separatedBy\u0060 on\n those objects\u0027 bounding boxes as a quick check to see if the objects had a gap\n of at least 1 cm between them.\n Separation is defined as the _minimum_ distance one box would have to move so\n that it touched the other. (Note that this may be a _diagonal_ distance between\n corners.) Boxes that just touch are considered to have a separation of zero.\n will return true even if the two boxes just touch each other.\n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2dmodule.html#union","title":"BoundingBox2D.union","content":"BoundingBox2D.union \nunion \n\n Create a bounding box that contains both bounding boxes.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html","title":"Circle2D","content":"Circle2D \n \nCircle2D.atPoint \natPoint \nCircle2D.withRadius \nwithRadius \nCircle2D.atOrigin \natOrigin \nCircle2D.throughPoints \nthroughPoints \nCircle2D.sweptAround \nsweptAround \nCircle2D.centerPoint \ncenterPoint \nCircle2D.radius \nradius \nCircle2D.diameter \ndiameter \nCircle2D.area \narea \nCircle2D.circumference \ncircumference \nCircle2D.toArc \ntoArc \nCircle2D.boundingBox \nboundingBox \nCircle2D.scaleAbout \nscaleAbout \nCircle2D.translateBy \ntranslateBy \nCircle2D.translateIn \ntranslateIn \nCircle2D.mirrorAcross \nmirrorAcross \nCircle2D.relativeTo \nrelativeTo \nCircle2D.placeIn \nplaceIn \nCircle2D.containsPoint \ncontainsPoint \nCircle2D.intersectsBoundingBox \nintersectsBoundingBox"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#atPoint","title":"Circle2D.atPoint","content":"Circle2D.atPoint \natPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#withRadius","title":"Circle2D.withRadius","content":"Circle2D.withRadius \nwithRadius \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#atOrigin","title":"Circle2D.atOrigin","content":"Circle2D.atOrigin \natOrigin \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#throughPoints","title":"Circle2D.throughPoints","content":"Circle2D.throughPoints \nthroughPoints \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#sweptAround","title":"Circle2D.sweptAround","content":"Circle2D.sweptAround \nsweptAround \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#centerPoint","title":"Circle2D.centerPoint","content":"Circle2D.centerPoint \ncenterPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#radius","title":"Circle2D.radius","content":"Circle2D.radius \nradius \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#diameter","title":"Circle2D.diameter","content":"Circle2D.diameter \ndiameter \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#area","title":"Circle2D.area","content":"Circle2D.area \narea \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#circumference","title":"Circle2D.circumference","content":"Circle2D.circumference \ncircumference \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#toArc","title":"Circle2D.toArc","content":"Circle2D.toArc \ntoArc \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#boundingBox","title":"Circle2D.boundingBox","content":"Circle2D.boundingBox \nboundingBox \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#scaleAbout","title":"Circle2D.scaleAbout","content":"Circle2D.scaleAbout \nscaleAbout \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#translateBy","title":"Circle2D.translateBy","content":"Circle2D.translateBy \ntranslateBy \n\n Translate a circle by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#translateIn","title":"Circle2D.translateIn","content":"Circle2D.translateIn \ntranslateIn \n\n Translate a circle in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#mirrorAcross","title":"Circle2D.mirrorAcross","content":"Circle2D.mirrorAcross \nmirrorAcross \n\n Mirror a circle across a given axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#relativeTo","title":"Circle2D.relativeTo","content":"Circle2D.relativeTo \nrelativeTo \n\n Take a circle defined in global coordinates, and return it expressed in\n local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#placeIn","title":"Circle2D.placeIn","content":"Circle2D.placeIn \nplaceIn \n\n Take a circle considered to be defined in local coordinates relative to a\n given reference frame, and return that circle expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#containsPoint","title":"Circle2D.containsPoint","content":"Circle2D.containsPoint \ncontainsPoint \n\n Test if a circle point is contained within a circle. A point is considered\n to be contained if the point lies on the edge of the circle.\n"},{"uri":"/fsharp-geometry/reference/geometry-circle2dmodule.html#intersectsBoundingBox","title":"Circle2D.intersectsBoundingBox","content":"Circle2D.intersectsBoundingBox \nintersectsBoundingBox \n\n Check if a circle intersects with a given bounding box. This function will\n return true if the circle intersects the edges of the bounding box _or_ is fully\n contained within the bounding box.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html","title":"Direction2D","content":"Direction2D \n \nDirection2D.xy \nxy \nDirection2D.fromComponents \nfromComponents \nDirection2D.xyLength \nxyLength \nDirection2D.xyUnsafe \nxyUnsafe \nDirection2D.fromAngle \nfromAngle \nDirection2D.degrees \ndegrees \nDirection2D.radians \nradians \nDirection2D.from \nfrom \nDirection2D.positiveX \npositiveX \nDirection2D.positiveY \npositiveY \nDirection2D.negativeX \nnegativeX \nDirection2D.negativeY \nnegativeY \nDirection2D.x \nx \nDirection2D.y \ny \nDirection2D.toAngle \ntoAngle \nDirection2D.toTuple \ntoTuple \nDirection2D.xComponent \nxComponent \nDirection2D.components \ncomponents \nDirection2D.yComponent \nyComponent \nDirection2D.toVector \ntoVector \nDirection2D.reverse \nreverse \nDirection2D.rotateCounterclockwise \nrotateCounterclockwise \nDirection2D.rotateClockwise \nrotateClockwise \nDirection2D.perpendicularTo \nperpendicularTo \nDirection2D.rotateBy \nrotateBy \nDirection2D.mirrorAcross \nmirrorAcross \nDirection2D.orthonormalize \northonormalize \nDirection2D.equalWithin \nequalWithin \nDirection2D.componentIn \ncomponentIn \nDirection2D.angleFrom \nangleFrom \nDirection2D.relativeTo \nrelativeTo \nDirection2D.placeIn \nplaceIn"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#xy","title":"Direction2D.xy","content":"Direction2D.xy \nxy \n\n Get a direction vector from the x and y components. This function takes\n care of normalizing the x and y components into the unit direction vector.\n This function also checks for the edge case where the x and y components\n are both zero. In that case, the function returns \u0060None\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#fromComponents","title":"Direction2D.fromComponents","content":"Direction2D.fromComponents \nfromComponents \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#xyLength","title":"Direction2D.xyLength","content":"Direction2D.xyLength \nxyLength \n\n Get a direction vector from the x and y length components. This function takes\n care of normalizing the x and y components into the unit direction vector.\n This function also checks for the edge case where the x and y components\n are both zero. In that case, the function returns \u0060None\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#xyUnsafe","title":"Direction2D.xyUnsafe","content":"Direction2D.xyUnsafe \nxyUnsafe \n\n Create a direction vector from the x and y components. This function\n doesn\u0027t perform either zero magnitude checks nor does it normalize the\n input vectors. This function should only be used with input constants or\n when you are sure that you aren\u0027t going to create a direction with an\n invalid state.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#fromAngle","title":"Direction2D.fromAngle","content":"Direction2D.fromAngle \nfromAngle \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#degrees","title":"Direction2D.degrees","content":"Direction2D.degrees \ndegrees \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#radians","title":"Direction2D.radians","content":"Direction2D.radians \nradians \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#from","title":"Direction2D.from","content":"Direction2D.from \nfrom \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#positiveX","title":"Direction2D.positiveX","content":"Direction2D.positiveX \npositiveX \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#positiveY","title":"Direction2D.positiveY","content":"Direction2D.positiveY \npositiveY \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#negativeX","title":"Direction2D.negativeX","content":"Direction2D.negativeX \nnegativeX \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#negativeY","title":"Direction2D.negativeY","content":"Direction2D.negativeY \nnegativeY \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#x","title":"Direction2D.x","content":"Direction2D.x \nx \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#y","title":"Direction2D.y","content":"Direction2D.y \ny \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#toAngle","title":"Direction2D.toAngle","content":"Direction2D.toAngle \ntoAngle \n\n Convert a direction to a polar angle (the counterclockwise angle from the\n positive X direction). The result will be in the range -180 to 180 degrees.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#toTuple","title":"Direction2D.toTuple","content":"Direction2D.toTuple \ntoTuple \n\n {-| Get the X and Y components of a direction as a tuple (X, Y).\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#xComponent","title":"Direction2D.xComponent","content":"Direction2D.xComponent \nxComponent \n\n Get the X component of the direction.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#components","title":"Direction2D.components","content":"Direction2D.components \ncomponents \n\n Get the X and Y component of the direction in a tuple.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#yComponent","title":"Direction2D.yComponent","content":"Direction2D.yComponent \nyComponent \n\n Get the Y component of the direction.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#toVector","title":"Direction2D.toVector","content":"Direction2D.toVector \ntoVector \n\n Convert a direction to a unitless vector of length 1.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#reverse","title":"Direction2D.reverse","content":"Direction2D.reverse \nreverse \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#rotateCounterclockwise","title":"Direction2D.rotateCounterclockwise","content":"Direction2D.rotateCounterclockwise \nrotateCounterclockwise \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#rotateClockwise","title":"Direction2D.rotateClockwise","content":"Direction2D.rotateClockwise \nrotateClockwise \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#perpendicularTo","title":"Direction2D.perpendicularTo","content":"Direction2D.perpendicularTo \nperpendicularTo \n\n Construct a direction perpendicular to the given direction, by rotating the\n given direction 90 degrees counterclockwise. This is the same\n \u0060Direction2D.rotateBy (Angle.degrees 90)\u0060 but is more efficient.\n Alias for \u0060rotateCounterclockwise\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#rotateBy","title":"Direction2D.rotateBy","content":"Direction2D.rotateBy \nrotateBy \n\n Rotate a direction counterclockwise by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#mirrorAcross","title":"Direction2D.mirrorAcross","content":"Direction2D.mirrorAcross \nmirrorAcross \n\n Mirror a direction across a particular axis. Note that only the direction of\n the axis affects the result, since directions are position-independent.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#orthonormalize","title":"Direction2D.orthonormalize","content":"Direction2D.orthonormalize \northonormalize \n\n Attempt to form a pair of perpendicular directions from the two given\n vectors by performing [Gram-Schmidt normalization](https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process):\n * The first returned direction will be equal to the direction of the first\n   given vector\n * The second returned direction will be as close as possible to the second\n   given vector while being perpendicular to the first returned direction\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#equalWithin","title":"Direction2D.equalWithin","content":"Direction2D.equalWithin \nequalWithin \n\n Compare two directions within an angular tolerance. Returns true if the\n absolute value of the angle between the two given directions is less than the\n given tolerance.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#componentIn","title":"Direction2D.componentIn","content":"Direction2D.componentIn \ncomponentIn \n\n Find the component of one direction in another direction. This is equal to\n the cosine of the angle between the directions, or equivalently the dot product\n of the two directions converted to unit vectors.\n This is more general and flexible than using \u0060xComponent\u0060 or \u0060yComponent\u0060, both\n of which can be expressed in terms of \u0060componentIn\u0060; for example,\n     \u0060Direction2d.xComponent direction\u0060\n is equivalent to\n     \u0060Direction2d.componentIn Direction2d.x direction\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#angleFrom","title":"Direction2D.angleFrom","content":"Direction2D.angleFrom \nangleFrom \n\n  Find the counterclockwise angle from the first direction to the\n second. The result will be in the range -180 to 180 degrees\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#relativeTo","title":"Direction2D.relativeTo","content":"Direction2D.relativeTo \nrelativeTo \n\n Take a direction defined in global coordinates, and return it expressed in\n local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-direction2dmodule.html#placeIn","title":"Direction2D.placeIn","content":"Direction2D.placeIn \nplaceIn \n\n Take a direction defined in local coordinates relative to a given reference\n frame, and return that direction expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html","title":"Ellipse2D","content":"Ellipse2D \n \nEllipse2D.from \nfrom \nEllipse2D.axes \naxes \nEllipse2D.centerPoint \ncenterPoint \nEllipse2D.xAxis \nxAxis \nEllipse2D.yAxis \nyAxis \nEllipse2D.xRadius \nxRadius \nEllipse2D.yRadius \nyRadius \nEllipse2D.xDirection \nxDirection \nEllipse2D.yDirection \nyDirection \nEllipse2D.area \narea \nEllipse2D.scaleAbout \nscaleAbout \nEllipse2D.transformBy \ntransformBy \nEllipse2D.rotateAround \nrotateAround \nEllipse2D.translateBy \ntranslateBy \nEllipse2D.translateIn \ntranslateIn \nEllipse2D.mirrorAcross \nmirrorAcross \nEllipse2D.relativeTo \nrelativeTo \nEllipse2D.placeIn \nplaceIn"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#from","title":"Ellipse2D.from","content":"Ellipse2D.from \nfrom \n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#axes","title":"Ellipse2D.axes","content":"Ellipse2D.axes \naxes \n\n Get the X and Y axes of an ellipse as a \u0060Frame2D\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#centerPoint","title":"Ellipse2D.centerPoint","content":"Ellipse2D.centerPoint \ncenterPoint \n\n Get the center point of an ellipse.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#xAxis","title":"Ellipse2D.xAxis","content":"Ellipse2D.xAxis \nxAxis \n\n Get the X axis of an ellipse.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#yAxis","title":"Ellipse2D.yAxis","content":"Ellipse2D.yAxis \nyAxis \n\n Get the Y axis of an ellipse.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#xRadius","title":"Ellipse2D.xRadius","content":"Ellipse2D.xRadius \nxRadius \n\n Get the radius of an ellipse along its X axis. This may be either the\n minimum or maximum radius.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#yRadius","title":"Ellipse2D.yRadius","content":"Ellipse2D.yRadius \nyRadius \n\n Get the radius of an ellipse along its Y axis. This may be either the\n minimum or maximum radius.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#xDirection","title":"Ellipse2D.xDirection","content":"Ellipse2D.xDirection \nxDirection \n\n Get the direction of the ellipse\u0027s X axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#yDirection","title":"Ellipse2D.yDirection","content":"Ellipse2D.yDirection \nyDirection \n\n Get the direction of an ellipse\u0027s Y axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#area","title":"Ellipse2D.area","content":"Ellipse2D.area \narea \n\n Get the area of an ellipse.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#scaleAbout","title":"Ellipse2D.scaleAbout","content":"Ellipse2D.scaleAbout \nscaleAbout \n\n Scale an ellipse about a given point by a given scale.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#transformBy","title":"Ellipse2D.transformBy","content":"Ellipse2D.transformBy \ntransformBy \n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#rotateAround","title":"Ellipse2D.rotateAround","content":"Ellipse2D.rotateAround \nrotateAround \n\n Rotate an ellipse around a given point by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#translateBy","title":"Ellipse2D.translateBy","content":"Ellipse2D.translateBy \ntranslateBy \n\n Translate an ellipse by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#translateIn","title":"Ellipse2D.translateIn","content":"Ellipse2D.translateIn \ntranslateIn \n\n Translate an ellipse in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#mirrorAcross","title":"Ellipse2D.mirrorAcross","content":"Ellipse2D.mirrorAcross \nmirrorAcross \n\n  Mirror an ellipse across a given axis. Note that if the axes of the original\n ellipse form a [right-handed](https://en.wikipedia.org/wiki/Cartesian_coordinate_system#Orientation_and_handedness)\n frame, then the axes of the mirrored ellipse will form a left-handed frame (and\n vice versa).\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#relativeTo","title":"Ellipse2D.relativeTo","content":"Ellipse2D.relativeTo \nrelativeTo \n\n Take an ellipse defined in global coordinates, and return it expressed in\n local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d.html#placeIn","title":"Ellipse2D.placeIn","content":"Ellipse2D.placeIn \nplaceIn \n\n Take an ellipse considered to be defined in local coordinates relative to a\n given reference frame, and return that circle expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-floatmodule.html","title":"Float","content":"Float \n \nFloat.Epsilon \nEpsilon \nFloat.almostEqual \nalmostEqual \nFloat.roundFloatTo \nroundFloatTo \nFloat.roundFloat \nroundFloat \nFloat.interpolateFrom \ninterpolateFrom"},{"uri":"/fsharp-geometry/reference/geometry-floatmodule.html#Epsilon","title":"Float.Epsilon","content":"Float.Epsilon \nEpsilon \n"},{"uri":"/fsharp-geometry/reference/geometry-floatmodule.html#almostEqual","title":"Float.almostEqual","content":"Float.almostEqual \nalmostEqual \n"},{"uri":"/fsharp-geometry/reference/geometry-floatmodule.html#roundFloatTo","title":"Float.roundFloatTo","content":"Float.roundFloatTo \nroundFloatTo \n"},{"uri":"/fsharp-geometry/reference/geometry-floatmodule.html#roundFloat","title":"Float.roundFloat","content":"Float.roundFloat \nroundFloat \n"},{"uri":"/fsharp-geometry/reference/geometry-floatmodule.html#interpolateFrom","title":"Float.interpolateFrom","content":"Float.interpolateFrom \ninterpolateFrom \n\n Interpolate from the first value to the second, based on a parameter that\n ranges from zero to one. Passing a parameter value of zero will return the start\n value and passing a parameter value of one will return the end value.\n     Float.interpolateFrom 5 10 0\n     --\u003E 5\n     Float.interpolateFrom 5 10 1\n     --\u003E 10\n     Float.interpolateFrom 5 10 0.6\n     --\u003E 8\n The end value can be less than the start value:\n     Float.interpolateFrom 10 5 0.1\n     --\u003E 9.5\n Parameter values less than zero or greater than one can be used to extrapolate:\n     Float.interpolateFrom 5 10 1.5\n     --\u003E 12.5\n     Float.interpolateFrom 5 10 -0.5\n     --\u003E 2.5\n     Float.interpolateFrom 10 5 -0.2\n     --\u003E 11\n -}\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html","title":"Frame2D","content":"Frame2D \n \nFrame2D.atOrigin \natOrigin \nFrame2D.atPoint \natPoint \nFrame2D.withXDirection \nwithXDirection \nFrame2D.withYDirection \nwithYDirection \nFrame2D.withAngle \nwithAngle \nFrame2D.fromXAxis \nfromXAxis \nFrame2D.fromYAxis \nfromYAxis \nFrame2D.originPoint \noriginPoint \nFrame2D.xDirection \nxDirection \nFrame2D.yDirection \nyDirection \nFrame2D.isRightHanded \nisRightHanded \nFrame2D.xAxis \nxAxis \nFrame2D.yAxis \nyAxis \nFrame2D.reverseX \nreverseX \nFrame2D.reverseY \nreverseY \nFrame2D.moveTo \nmoveTo \nFrame2D.rotateBy \nrotateBy \nFrame2D.rotateAround \nrotateAround \nFrame2D.translateBy \ntranslateBy \nFrame2D.translateIn \ntranslateIn \nFrame2D.translateAlongOwn \ntranslateAlongOwn \nFrame2D.mirrorAcross \nmirrorAcross \nFrame2D.copy \ncopy \nFrame2D.relativeTo \nrelativeTo \nFrame2D.placeIn \nplaceIn"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#atOrigin","title":"Frame2D.atOrigin","content":"Frame2D.atOrigin \natOrigin \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#atPoint","title":"Frame2D.atPoint","content":"Frame2D.atPoint \natPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#withXDirection","title":"Frame2D.withXDirection","content":"Frame2D.withXDirection \nwithXDirection \n\n Construct a frame with the given Y axis direction, having the given origin\n point. The X axis direction will be constructed by rotating the given\n direction 90 degrees clockwise.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#withYDirection","title":"Frame2D.withYDirection","content":"Frame2D.withYDirection \nwithYDirection \n\n Construct a frame with the given Y axis direction, having the given origin\n point. The X axis direction will be constructed by rotating the given Y\n direction 90 degrees clockwise.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#withAngle","title":"Frame2D.withAngle","content":"Frame2D.withAngle \nwithAngle \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#fromXAxis","title":"Frame2D.fromXAxis","content":"Frame2D.fromXAxis \nfromXAxis \n\n Construct a \u0060Frame2d\u0060 given its X axis\n \u0060Frame2d.fromXAxis axis\u0060\n is equivalent to\n \u0060Frame2d.withXDirection (Axis2d.direction axis) (Axis2d.originPoint axis)\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#fromYAxis","title":"Frame2D.fromYAxis","content":"Frame2D.fromYAxis \nfromYAxis \n\n Construct a \u0060Frame2d\u0060 given its Y axis;\n \u0060Frame2d.fromYAxis axis\u0060 is equivalent to\n \u0060Frame2d.withYDirection (Axis2d.direction axis) (Axis2d.originPoint axis)\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#originPoint","title":"Frame2D.originPoint","content":"Frame2D.originPoint \noriginPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#xDirection","title":"Frame2D.xDirection","content":"Frame2D.xDirection \nxDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#yDirection","title":"Frame2D.yDirection","content":"Frame2D.yDirection \nyDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#isRightHanded","title":"Frame2D.isRightHanded","content":"Frame2D.isRightHanded \nisRightHanded \n\n Check if a frame is [right-handed](https://en.wikipedia.org/wiki/Cartesian_coordinate_system#Orientation_and_handedness).\n All predefined frames are right-handed, and most operations on frames preserve\n handedness, so about the only ways to end up with a left-handed frame are by\n constructing one explicitly with \u0060unsafe\u0060 or by mirroring a right-handed frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#xAxis","title":"Frame2D.xAxis","content":"Frame2D.xAxis \nxAxis \n\n Get the X axis of a given frame (the axis formed from the frame\u0027s origin\n point and X direction).\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#yAxis","title":"Frame2D.yAxis","content":"Frame2D.yAxis \nyAxis \n\n Get the Y axis of a given frame (the axis formed from the frame\u0027s origin\n point and Y direction).\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#reverseX","title":"Frame2D.reverseX","content":"Frame2D.reverseX \nreverseX \n\n Reverse the X direction of a frame, leaving its Y direction and origin point\n the same. Note that this will switch the\n [handedness](https://en.wikipedia.org/wiki/Cartesian_coordinate_system#Orientation_and_handedness)\n of the frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#reverseY","title":"Frame2D.reverseY","content":"Frame2D.reverseY \nreverseY \n\n Reverse the Y direction of a frame, leaving its X direction and origin point\n the same. Note that this will switch the\n [handedness](https://en.wikipedia.org/wiki/Cartesian_coordinate_system#Orientation_and_handedness)\n of the frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#moveTo","title":"Frame2D.moveTo","content":"Frame2D.moveTo \nmoveTo \n\n Move a frame so that it has the given origin point.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#rotateBy","title":"Frame2D.rotateBy","content":"Frame2D.rotateBy \nrotateBy \n\n Rotate a frame counterclockwise by a given angle around the frame\u0027s own\n origin point. The resulting frame will have the same origin point, and its X and\n Y directions will be rotated by the given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#rotateAround","title":"Frame2D.rotateAround","content":"Frame2D.rotateAround \nrotateAround \n\n Rotate a frame counterclockwise around a given point by a given angle. The\n frame\u0027s origin point will be rotated around the given point by the given angle,\n and its X and Y basis directions will be rotated by the given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#translateBy","title":"Frame2D.translateBy","content":"Frame2D.translateBy \ntranslateBy \n\n Translate a frame by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#translateIn","title":"Frame2D.translateIn","content":"Frame2D.translateIn \ntranslateIn \n\n Translate a frame in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#translateAlongOwn","title":"Frame2D.translateAlongOwn","content":"Frame2D.translateAlongOwn \ntranslateAlongOwn \n\n Translate a frame along one of its own axes by a given distance.\n The first argument is a function that returns the axis to translate along, given\n the current frame. The majority of the time this argument will be either\n \u0060Frame2d.xAxis\u0060 or \u0060Frame2d.yAxis\u0060. The second argument is the distance to\n translate along the given axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#mirrorAcross","title":"Frame2D.mirrorAcross","content":"Frame2D.mirrorAcross \nmirrorAcross \n\n Mirror a frame across an axis.\n Note that this will switch the [handedness](https://en.wikipedia.org/wiki/Cartesian_coordinate_system#Orientation_and_handedness)\n of the frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#copy","title":"Frame2D.copy","content":"Frame2D.copy \ncopy \n\n Create a \u0027fresh copy\u0027 of a frame: one with the same origin point and X/Y\n directions, but that can be used to define a different local coordinate system.\n Sometimes useful in generic/library code. Despite the name, this is efficient:\n it really just returns the value you passed in, but with a different type.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#relativeTo","title":"Frame2D.relativeTo","content":"Frame2D.relativeTo \nrelativeTo \n\n Take two frames defined in global coordinates, and return the second one\n expressed in local coordinates relative to the first.\n"},{"uri":"/fsharp-geometry/reference/geometry-frame2dmodule.html#placeIn","title":"Frame2D.placeIn","content":"Frame2D.placeIn \nplaceIn \n\n Take one frame defined in global coordinates and a second frame defined\n in local coordinates relative to the first frame, and return the second frame\n expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-intersection2d.html","title":"Intersection2D","content":"Intersection2D \n \nIntersection2D.lineSegmentAndLine \nlineSegmentAndLine \nIntersection2D.lineAndLineSegment \nlineAndLineSegment \nIntersection2D.boundingBoxAndLine \nboundingBoxAndLine"},{"uri":"/fsharp-geometry/reference/geometry-intersection2d.html#lineSegmentAndLine","title":"Intersection2D.lineSegmentAndLine","content":"Intersection2D.lineSegmentAndLine \nlineSegmentAndLine \n\n Try to find the intersection between a line segment and a line. If the lines are parallel (even if they are\n overlapping) then no intersection is returned.\n"},{"uri":"/fsharp-geometry/reference/geometry-intersection2d.html#lineAndLineSegment","title":"Intersection2D.lineAndLineSegment","content":"Intersection2D.lineAndLineSegment \nlineAndLineSegment \n"},{"uri":"/fsharp-geometry/reference/geometry-intersection2d.html#boundingBoxAndLine","title":"Intersection2D.boundingBoxAndLine","content":"Intersection2D.boundingBoxAndLine \nboundingBoxAndLine \n\n Get all the intersection points between a bounding box and a line\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html","title":"Interval","content":"Interval \n \nInterval.unit \nunit \nInterval.from \nfrom \nInterval.fromEndpoints \nfromEndpoints \nInterval.singleton \nsingleton \nInterval.endpoints \nendpoints \nInterval.minValue \nminValue \nInterval.maxValue \nmaxValue \nInterval.midpoint \nmidpoint \nInterval.width \nwidth \nInterval.isSingleton \nisSingleton \nInterval.union \nunion \nInterval.intersection \nintersection \nInterval.negate \nnegate \nInterval.add \nadd \nInterval.subtract \nsubtract \nInterval.multiplyBy \nmultiplyBy \nInterval.divideBy \ndivideBy \nInterval.half \nhalf \nInterval.twice \ntwice \nInterval.plus \nplus \nInterval.minus \nminus \nInterval.times \ntimes \nInterval.cosIncludesMax \ncosIncludesMax \nInterval.cosIncludesMinMax \ncosIncludesMinMax \nInterval.sinIncludesMinMax \nsinIncludesMinMax \nInterval.sin \nsin \nInterval.cos \ncos \nInterval.interpolate \ninterpolate \nInterval.interpolationParameter \ninterpolationParameter \nInterval.contains \ncontains \nInterval.intersects \nintersects \nInterval.isContainedIn \nisContainedIn \nInterval.hull \nhull \nInterval.hull3 \nhull3 \nInterval.hullN \nhullN \nInterval.hullOf \nhullOf \nInterval.hullOfN \nhullOfN \nInterval.aggregate \naggregate \nInterval.aggregate3 \naggregate3 \nInterval.aggregateN \naggregateN \nInterval.aggregateOf \naggregateOf \nInterval.aggregateOfN \naggregateOfN"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#unit","title":"Interval.unit","content":"Interval.unit \nunit \n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#from","title":"Interval.from","content":"Interval.from \nfrom \n\n Construct an interval from two given values.\n\n The values should be given in order, but will be swapped if needed to\n ensure a valid interval is created.\n\n     Interval.from (3, 2)\n     // Interval (2, 3)\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#fromEndpoints","title":"Interval.fromEndpoints","content":"Interval.fromEndpoints \nfromEndpoints \n\n Construct an interval from it\u0027s endpoints.\n\n The values should be given in order, but will be swapped if needed to\n ensure a valid interval is created.\n\n     Interval.fromEndpoints (3, 2)\n     // Interval (2, 3)\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#singleton","title":"Interval.singleton","content":"Interval.singleton \nsingleton \n\n Construct a zero width interval containing a single value\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#endpoints","title":"Interval.endpoints","content":"Interval.endpoints \nendpoints \n\n Get the endpoints of an interval (its minimum and maximum values) as a\n tuple. The first value will always be less than or equal to the second.\n     ( minValue, maxValue ) =\n         Interval.endpoints someInterval\n For any interval,\n     Interval.endpoints interval\n is equivalent to (but more efficient than)\n     ( Interval.minValue interval\n     , Interval.maxValue interval\n     )\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#minValue","title":"Interval.minValue","content":"Interval.minValue \nminValue \n\n Get the minimum value of an interval.\n     Interval.minValue (Interval.from 1 3)\n     --\u003E 1\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#maxValue","title":"Interval.maxValue","content":"Interval.maxValue \nmaxValue \n\n Get the maximum value of an interval.\n     Interval.maxValue (Interval.from 1 3)\n     --\u003E 3\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#midpoint","title":"Interval.midpoint","content":"Interval.midpoint \nmidpoint \n\n Get the midpoint of an interval.\n     Interval.midpoint (Interval.from 1 4)\n     --\u003E 2.5\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#width","title":"Interval.width","content":"Interval.width \nwidth \n\n Get the width of an interval.\n     Interval.width (Interval.from 1 5)\n     --\u003E 4\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#isSingleton","title":"Interval.isSingleton","content":"Interval.isSingleton \nisSingleton \n\n Check if the interval is a singleton (the minimum and maximum values are the\n same).\n     Interval.isSingleton (Interval.from 2 2)\n     --\u003E True\n     Interval.isSingleton (Interval.from 2 3)\n     --\u003E False\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#union","title":"Interval.union","content":"Interval.union \nunion \n\n Construct an interval containing both of the given intervals.\n     firstInterval =\n         Interval.from 1 2\n     secondInterval =\n         Interval.from 3 6\n     Interval.union firstInterval secondInterval\n     --\u003E Interval.from 1 6\n (Note that this is not strictly speaking a \u0027union\u0027 in the precise mathematical\n sense, since the result will contain values that are _in between_ the two given\n intervals and not actually _in_ either of them if those two intervals do not\n overlap.)\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#intersection","title":"Interval.intersection","content":"Interval.intersection \nintersection \n\n Attempt to construct an interval containing all the values common to both\n given intervals. If the intervals do not intersect, returns \u0060Nothing\u0060.\n     Interval.intersection\n         (Interval.from 1 3)\n         (Interval.from 2 5)\n     --\u003E Just (Interval.from 2 3)\n     Interval.intersection\n         (Interval.from 1 3)\n         (Interval.from 4 7)\n     --\u003E Nothing\n If the two intervals just touch, a singleton interval will be returned:\n     Interval.intersection\n         (Interval.from 1 3)\n         (Interval.from 3 5)\n     --\u003E Just (Interval.singleton 3)\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#negate","title":"Interval.negate","content":"Interval.negate \nnegate \n\n Negate an interval. Note that this will flip the order of the endpoints.\n    Interval.negate (Interval.from 2 3)\n    --\u003E Interval.from -3 -2\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#add","title":"Interval.add","content":"Interval.add \nadd \n\n Add the given amount to an interval.\n    Interval.from -1 5 |\u003E Interval.add 3\n    --\u003E Interval.from 2 8\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#subtract","title":"Interval.subtract","content":"Interval.subtract \nsubtract \n\n Subtract the given amount from an interval.\n    Interval.from -1 5 |\u003E Interval.subtract 3\n    --\u003E Interval.from -4 2\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#multiplyBy","title":"Interval.multiplyBy","content":"Interval.multiplyBy \nmultiplyBy \n\n  Multiply an interval by a given value. Note that this will flip the order\n of the interval\u0027s endpoints if the given value is negative.\n     Interval.multiplyBy 5 (Interval.from 2 3)\n     --\u003E Interval.from 10 15\n     Interval.multiplyBy -2 (Interval.from 2 3)\n     --\u003E Interval.from -6 -4\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#divideBy","title":"Interval.divideBy","content":"Interval.divideBy \ndivideBy \n\n Divide an interval by a given value. Note that this will flip the order\n of the interval\u0027s endpoints if the given value is negative.\n     Interval.divideBy 2 (Interval.from 2 3)\n     --\u003E Interval.from 1 1.5\n     Interval.divideBy -2 (Interval.from 2 3)\n     --\u003E Interval.from -1.5 -1\n -}\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#half","title":"Interval.half","content":"Interval.half \nhalf \n\n Shorthand for \u0060multiplyBy 0.5\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#twice","title":"Interval.twice","content":"Interval.twice \ntwice \n\n Shorthand for \u0060multiplyBy 2\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#plus","title":"Interval.plus","content":"Interval.plus \nplus \n\n Add two intervals together.\n     Interval.from 5 10\n         |\u003E Interval.plus (Interval.from 2 3)\n     --\u003E Interval.from 7 13\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#minus","title":"Interval.minus","content":"Interval.minus \nminus \n\n Subtract the first interval from the second. This means that \u0060minus\u0060 makes\n the most sense when using \u0060|\u003E\u0060:\n     Interval.from 5 10\n         |\u003E Interval.minus (Interval.from 2 3)\n     --\u003E Interval.from 2 8\n Without the pipe operator, the above would be written as:\n     Interval.minus (Interval.from 2 3)\n         (Interval.from 5 10)\n     --\u003E Interval.from 2 8\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#times","title":"Interval.times","content":"Interval.times \ntimes \n\n Multiply the two given intervals.\n     Interval.from 10 12\n         |\u003E Interval.times\n             (Interval.from 5 6)\n     --\u003E Interval.from 50 72\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#cosIncludesMax","title":"Interval.cosIncludesMax","content":"Interval.cosIncludesMax \ncosIncludesMax \n\n The maximum of cos(x) is x = 2 pi \\* k for every integer k.\n If \u0060minValue\u0060 and \u0060maxValue\u0060 are in different branches\n (meaning different values of k), then the interval must pass through\n 2 pi \\* k, which means the interval must include the maximum value.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#cosIncludesMinMax","title":"Interval.cosIncludesMinMax","content":"Interval.cosIncludesMinMax \ncosIncludesMinMax \n\n cos(x \u002B pi) = -cos(x), therefore if cos(interval \u002B pi) includes the maximum,\n that means cos(interval) includes the minimum.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#sinIncludesMinMax","title":"Interval.sinIncludesMinMax","content":"Interval.sinIncludesMinMax \nsinIncludesMinMax \n\n cos(x - pi/2) = sin(x), therefore if cos(interval - pi/2) includes\n the maximum/minimum, that means sin(interval) includes the maximum/minimum\n accordingly.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#sin","title":"Interval.sin","content":"Interval.sin \nsin \n\n Get the image of sin(x) applied on the interval.\n     Interval.sin (Interval.from 0 (degrees 45))\n     --\u003E Interval.from 0 0.7071\n     Interval.sin (Interval.from 0 pi)\n     --\u003E Interval.from 0 1\n -}\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#cos","title":"Interval.cos","content":"Interval.cos \ncos \n\n  Get the image of cos(x) applied on the interval.\n     Interval.cos (Interval.from 0 (degrees 45))\n     --\u003E Interval.from 0.7071 1\n     Interval.cos (Interval.from 0 pi)\n     --\u003E Interval.from -1 1\n -}\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#interpolate","title":"Interval.interpolate","content":"Interval.interpolate \ninterpolate \n\n Interpolate between an interval\u0027s endpoints based on a parameter value that\n will generally be between 0.0 and 1.0. A value of 0.0 corresponds to the minimum\n value of the interval, a value of 0.5 corresponds to its midpoint and a value of\n 1.0 corresponds to its maximum value:\n     Interval.interpolate (Interval.from 1 5) 0\n     --\u003E 1\n     Interval.interpolate (Interval.from 1 5) 0.75\n     --\u003E 4\n Values less than 0.0 or greater than 1.0 can be used to extrapolate:\n     Interval.interpolate (Interval.from 1 5) 1.5\n     --\u003E 7\n Note that because of how [\u0060Interval.from\u0060](#from) works, the interpolation is in\n fact from the minimum value to the maximum, _not_ \u0022from the first\n \u0060Interval.from\u0060 argument to the second\u0022:\n     Interval.interpolate (Interval.from 0 10) 0.2\n     --\u003E 2\n     Interval.interpolate (Interval.from 10 0) 0.2\n     --\u003E 2 -- not 8!\n If you want the interpolate from one number down to another, you can use\n [\u0060Float.Extra.interpolateFrom\u0060](https://package.elm-lang.org/packages/ianmackenzie/elm-float-extra/latest/Float-Extra#interpolateFrom)\n from the \u0060elm-float-extra\u0060 package.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#interpolationParameter","title":"Interval.interpolationParameter","content":"Interval.interpolationParameter \ninterpolationParameter \n\n Given an interval and a given value, determine the corresponding\n interpolation parameter (the parameter that you would pass to [\u0060interpolate\u0060](#interpolate)\n to get the given value):\n     Interval.interpolationParameter\n         (Interval.from 10 15)\n         12\n     --\u003E 0.4\n The result will be between 0 and 1 if (and only if) the given value is within\n the given interval:\n     Interval.interpolationParameter\n         (Interval.from 10 15)\n         18\n     --\u003E 1.6\n     Interval.interpolationParameter\n         (Interval.from 10 15)\n         9\n     --\u003E -0.2\n This is the inverse of \u0060interpolate\u0060; for any non-zero-width \u0060interval\u0060,\n     Interval.interpolationParameter interval value\n         |\u003E Interval.interpolate interval\n should be equal to the original \u0060value\u0060 (within numerical round off).\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#contains","title":"Interval.contains","content":"Interval.contains \ncontains \n\n Test if a value is contained with a particular interval.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#intersects","title":"Interval.intersects","content":"Interval.intersects \nintersects \n\n Check if two intervals touch or overlap (have any values in common).\n     Interval.from -5 5\n         |\u003E Interval.intersects (Interval.from 0 10)\n     --\u003E True\n     Interval.from -5 5\n         |\u003E Interval.intersects (Interval.from 10 20)\n     --\u003E False\n Intervals that just touch each other are considered to intersect (this is\n consistent with \u0060intersection\u0060 which will return a zero-width interval for the\n intersection of two just-touching intervals):\n     Interval.from -5 5\n         |\u003E Interval.intersects (Interval.from 5 10)\n     --\u003E True\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#isContainedIn","title":"Interval.isContainedIn","content":"Interval.isContainedIn \nisContainedIn \n\n Check if the second interval is fully contained in the first.\n     Interval.from -5 5\n         |\u003E Interval.isContainedIn (Interval.from 0 10)\n     --\u003E False\n     Interval.from -5 5\n         |\u003E Interval.isContainedIn (Interval.from -10 10)\n     --\u003E True\n Be careful with the argument order! If not using the \u0060|\u003E\u0060 operator, the second\n example would be written as:\n     Interval.isContainedIn (Interval.from -10 10)\n         (Interval.from -5 5)\n     --\u003E True\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#hull","title":"Interval.hull","content":"Interval.hull \nhull \n\n Find the interval containing one or more input values:\n    Interval.hull 5 [ 3, 2, 4 ]\n    --\u003E Interval.from 2 5\n See also [\u0060hullN\u0060](#hullN).\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#hull3","title":"Interval.hull3","content":"Interval.hull3 \nhull3 \n\n Construct an interval containing the three given values;\n     Interval.hull3 a b c\n is equivalent to\n     Interval.hull a [ b, c ]\n but is more efficient. (If you\u0027re looking for a \u0060hull2\u0060 function, [\u0060from\u0060](#from)\n should do what you want.)\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#hullN","title":"Interval.hullN","content":"Interval.hullN \nhullN \n\n Attempt to construct an interval containing all _N_ values in the given\n list. If the list is empty, returns \u0060Nothing\u0060. If you know you have at least one\n value, you can use [\u0060hull\u0060](#hull) instead.\n     Interval.hullN [ 2, 1, 3 ]\n     --\u003E Just (Interval.from 1 3)\n     Interval.hullN [ -3 ]\n     --\u003E Just (Interval.singleton -3)\n     Interval.hullN []\n     --\u003E Nothing\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#hullOf","title":"Interval.hullOf","content":"Interval.hullOf \nhullOf \n\n Like [\u0060hull\u0060](#hull), but lets you work on any kind of item as long as a\n number can be extracted from it. For example, if you had\n     type alias Person =\n         { name : String\n         , age : Float\n         }\n then given some people you could find their range of ages as an \u0060Interval\u0060\n using\n     Interval.hullOf .age\n         firstPerson\n         [ secondPerson\n         , thirdPerson\n         , fourthPerson\n         ]\n See also [\u0060hullOfN\u0060](#hullOfN).\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#hullOfN","title":"Interval.hullOfN","content":"Interval.hullOfN \nhullOfN \n\n Combination of [\u0060hullOf\u0060](#hullOf) and [\u0060hullN\u0060](#hullN).\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#aggregate","title":"Interval.aggregate","content":"Interval.aggregate \naggregate \n\n Construct an interval containing one or more given intervals:\n     Interval.aggregate\n         (Interval.singleton 2)\n         [ Interval.singleton 4\n         , Interval.singleton 3\n         ]\n     --\u003E Interval.from 2 4\n Works much like [\u0060hull\u0060](#hull). See also [\u0060aggregateN\u0060](#aggregateN).\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#aggregate3","title":"Interval.aggregate3","content":"Interval.aggregate3 \naggregate3 \n\n Special case of [\u0060aggregate\u0060](#aggregate) for the case of three intervals;\n     Interval.aggregate3 first second third\n is equivalent to\n     Interval.aggregate first [ second, third ]\n but is more efficient. (If you\u0027re looking for an \u0060aggregate2\u0060 function,\n [\u0060union\u0060](#union) should do what you want.)\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#aggregateN","title":"Interval.aggregateN","content":"Interval.aggregateN \naggregateN \n\n  Attempt to construct an interval containing all of the intervals in the given\n list. If the list is empty, returns \u0060Nothing\u0060. If you know you have at least one\n interval, you can use [\u0060aggregate\u0060](#aggregate) instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#aggregateOf","title":"Interval.aggregateOf","content":"Interval.aggregateOf \naggregateOf \n\n Like [\u0060aggregate\u0060](#aggregate), but lets you work on any kind of item as\n long as an interval can be generated from it (similar to [\u0060hullOf\u0060](#hullOf)).\n"},{"uri":"/fsharp-geometry/reference/geometry-interval.html#aggregateOfN","title":"Interval.aggregateOfN","content":"Interval.aggregateOfN \naggregateOfN \n\n Combination of [\u0060aggregateOf\u0060](#aggregateOf) and [\u0060aggregateN\u0060](#aggregateN).\n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html","title":"Length","content":"Length \n \nLength.Constant \nConstant \nLength.zero \nzero \nLength.meters \nmeters \nLength.inMeters \ninMeters \nLength.angstroms \nangstroms \nLength.inAngstroms \ninAngstroms \nLength.nanometers \nnanometers \nLength.inNanometers \ninNanometers \nLength.microns \nmicrons \nLength.inMicrons \ninMicrons \nLength.millimeters \nmillimeters \nLength.inMillimeters \ninMillimeters \nLength.centimeters \ncentimeters \nLength.inCentimeters \ninCentimeters \nLength.kilometers \nkilometers \nLength.inKilometers \ninKilometers \nLength.thou \nthou \nLength.inThou \ninThou \nLength.inches \ninches \nLength.inInches \ninInches \nLength.feet \nfeet \nLength.inFeet \ninFeet \nLength.yards \nyards \nLength.inYards \ninYards \nLength.miles \nmiles \nLength.inMiles \ninMiles \nLength.astronomicalUnits \nastronomicalUnits \nLength.inAstronomicalUnits \ninAstronomicalUnits \nLength.parsecs \nparsecs \nLength.inParsecs \ninParsecs \nLength.lightYears \nlightYears \nLength.inLightYears \ninLightYears \nLength.cssPixels \ncssPixels \nLength.inCssPixels \ninCssPixels \nLength.points \npoints \nLength.inPoints \ninPoints \nLength.picas \npicas \nLength.inPicas \ninPicas \nLength.nanometer \nnanometer \nLength.micron \nmicron \nLength.millimeter \nmillimeter \nLength.centimeter \ncentimeter \nLength.kilometer \nkilometer \nLength.oneThou \noneThou \nLength.inch \ninch \nLength.foot \nfoot \nLength.yard \nyard \nLength.mile \nmile \nLength.astronomicalUnit \nastronomicalUnit \nLength.parsec \nparsec \nLength.lightYear \nlightYear \nLength.cssPixel \ncssPixel \nLength.point \npoint \nLength.pica \npica \nLength.unitless \nunitless \nLength.apply \napply \nLength.squared \nsquared \nLength.sqrt \nsqrt \nLength.twice \ntwice \nLength.half \nhalf \nLength.round \nround \nLength.roundTo \nroundTo \nLength.abs \nabs \nLength.min \nmin \nLength.max \nmax \nLength.sum \nsum \nLength.midpoint \nmidpoint \nLength.unpack \nunpack"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#zero","title":"Length.zero","content":"Length.zero \nzero \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#meters","title":"Length.meters","content":"Length.meters \nmeters \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inMeters","title":"Length.inMeters","content":"Length.inMeters \ninMeters \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#angstroms","title":"Length.angstroms","content":"Length.angstroms \nangstroms \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inAngstroms","title":"Length.inAngstroms","content":"Length.inAngstroms \ninAngstroms \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#nanometers","title":"Length.nanometers","content":"Length.nanometers \nnanometers \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inNanometers","title":"Length.inNanometers","content":"Length.inNanometers \ninNanometers \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#microns","title":"Length.microns","content":"Length.microns \nmicrons \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inMicrons","title":"Length.inMicrons","content":"Length.inMicrons \ninMicrons \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#millimeters","title":"Length.millimeters","content":"Length.millimeters \nmillimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inMillimeters","title":"Length.inMillimeters","content":"Length.inMillimeters \ninMillimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#centimeters","title":"Length.centimeters","content":"Length.centimeters \ncentimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inCentimeters","title":"Length.inCentimeters","content":"Length.inCentimeters \ninCentimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#kilometers","title":"Length.kilometers","content":"Length.kilometers \nkilometers \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inKilometers","title":"Length.inKilometers","content":"Length.inKilometers \ninKilometers \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#thou","title":"Length.thou","content":"Length.thou \nthou \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inThou","title":"Length.inThou","content":"Length.inThou \ninThou \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inches","title":"Length.inches","content":"Length.inches \ninches \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inInches","title":"Length.inInches","content":"Length.inInches \ninInches \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#feet","title":"Length.feet","content":"Length.feet \nfeet \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inFeet","title":"Length.inFeet","content":"Length.inFeet \ninFeet \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#yards","title":"Length.yards","content":"Length.yards \nyards \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inYards","title":"Length.inYards","content":"Length.inYards \ninYards \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#miles","title":"Length.miles","content":"Length.miles \nmiles \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inMiles","title":"Length.inMiles","content":"Length.inMiles \ninMiles \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#astronomicalUnits","title":"Length.astronomicalUnits","content":"Length.astronomicalUnits \nastronomicalUnits \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inAstronomicalUnits","title":"Length.inAstronomicalUnits","content":"Length.inAstronomicalUnits \ninAstronomicalUnits \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#parsecs","title":"Length.parsecs","content":"Length.parsecs \nparsecs \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inParsecs","title":"Length.inParsecs","content":"Length.inParsecs \ninParsecs \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#lightYears","title":"Length.lightYears","content":"Length.lightYears \nlightYears \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inLightYears","title":"Length.inLightYears","content":"Length.inLightYears \ninLightYears \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#cssPixels","title":"Length.cssPixels","content":"Length.cssPixels \ncssPixels \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inCssPixels","title":"Length.inCssPixels","content":"Length.inCssPixels \ninCssPixels \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#points","title":"Length.points","content":"Length.points \npoints \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inPoints","title":"Length.inPoints","content":"Length.inPoints \ninPoints \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#picas","title":"Length.picas","content":"Length.picas \npicas \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inPicas","title":"Length.inPicas","content":"Length.inPicas \ninPicas \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#nanometer","title":"Length.nanometer","content":"Length.nanometer \nnanometer \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#micron","title":"Length.micron","content":"Length.micron \nmicron \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#millimeter","title":"Length.millimeter","content":"Length.millimeter \nmillimeter \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#centimeter","title":"Length.centimeter","content":"Length.centimeter \ncentimeter \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#kilometer","title":"Length.kilometer","content":"Length.kilometer \nkilometer \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#oneThou","title":"Length.oneThou","content":"Length.oneThou \noneThou \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#inch","title":"Length.inch","content":"Length.inch \ninch \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#foot","title":"Length.foot","content":"Length.foot \nfoot \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#yard","title":"Length.yard","content":"Length.yard \nyard \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#mile","title":"Length.mile","content":"Length.mile \nmile \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#astronomicalUnit","title":"Length.astronomicalUnit","content":"Length.astronomicalUnit \nastronomicalUnit \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#parsec","title":"Length.parsec","content":"Length.parsec \nparsec \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#lightYear","title":"Length.lightYear","content":"Length.lightYear \nlightYear \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#cssPixel","title":"Length.cssPixel","content":"Length.cssPixel \ncssPixel \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#point","title":"Length.point","content":"Length.point \npoint \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#pica","title":"Length.pica","content":"Length.pica \npica \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#unitless","title":"Length.unitless","content":"Length.unitless \nunitless \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#apply","title":"Length.apply","content":"Length.apply \napply \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#squared","title":"Length.squared","content":"Length.squared \nsquared \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#sqrt","title":"Length.sqrt","content":"Length.sqrt \nsqrt \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#twice","title":"Length.twice","content":"Length.twice \ntwice \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#half","title":"Length.half","content":"Length.half \nhalf \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#round","title":"Length.round","content":"Length.round \nround \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#roundTo","title":"Length.roundTo","content":"Length.roundTo \nroundTo \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#abs","title":"Length.abs","content":"Length.abs \nabs \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#min","title":"Length.min","content":"Length.min \nmin \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#max","title":"Length.max","content":"Length.max \nmax \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#sum","title":"Length.sum","content":"Length.sum \nsum \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#midpoint","title":"Length.midpoint","content":"Length.midpoint \nmidpoint \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule.html#unpack","title":"Length.unpack","content":"Length.unpack \nunpack \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html","title":"Constant","content":"Constant \n\n Units of length in meters\n \nConstant.meter \nmeter \nConstant.angstrom \nangstrom \nConstant.nanometer \nnanometer \nConstant.micron \nmicron \nConstant.millimeter \nmillimeter \nConstant.centimeter \ncentimeter \nConstant.kilometer \nkilometer \nConstant.inch \ninch \nConstant.foot \nfoot \nConstant.yard \nyard \nConstant.thou \nthou \nConstant.mile \nmile \nConstant.astronomicalUnit \nastronomicalUnit \nConstant.lightYear \nlightYear \nConstant.parsec \nparsec \nConstant.cssPixel \ncssPixel \nConstant.point \npoint \nConstant.pica \npica"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#meter","title":"Constant.meter","content":"Constant.meter \nmeter \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#angstrom","title":"Constant.angstrom","content":"Constant.angstrom \nangstrom \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#nanometer","title":"Constant.nanometer","content":"Constant.nanometer \nnanometer \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#micron","title":"Constant.micron","content":"Constant.micron \nmicron \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#millimeter","title":"Constant.millimeter","content":"Constant.millimeter \nmillimeter \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#centimeter","title":"Constant.centimeter","content":"Constant.centimeter \ncentimeter \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#kilometer","title":"Constant.kilometer","content":"Constant.kilometer \nkilometer \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#inch","title":"Constant.inch","content":"Constant.inch \ninch \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#foot","title":"Constant.foot","content":"Constant.foot \nfoot \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#yard","title":"Constant.yard","content":"Constant.yard \nyard \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#thou","title":"Constant.thou","content":"Constant.thou \nthou \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#mile","title":"Constant.mile","content":"Constant.mile \nmile \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#astronomicalUnit","title":"Constant.astronomicalUnit","content":"Constant.astronomicalUnit \nastronomicalUnit \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#lightYear","title":"Constant.lightYear","content":"Constant.lightYear \nlightYear \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#parsec","title":"Constant.parsec","content":"Constant.parsec \nparsec \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#cssPixel","title":"Constant.cssPixel","content":"Constant.cssPixel \ncssPixel \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#point","title":"Constant.point","content":"Constant.point \npoint \n"},{"uri":"/fsharp-geometry/reference/geometry-lengthmodule-constant.html#pica","title":"Constant.pica","content":"Constant.pica \npica \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html","title":"Line2D","content":"Line2D \n \nLine2D.through \nthrough \nLine2D.fromPointAndVector \nfromPointAndVector \nLine2D.direction \ndirection \nLine2D.length \nlength \nLine2D.axis \naxis \nLine2D.round \nround \nLine2D.pointClosestTo \npointClosestTo \nLine2D.distanceToPoint \ndistanceToPoint \nLine2D.atPointInDirection \natPointInDirection \nLine2D.isPointOnLine \nisPointOnLine \nLine2D.areParallel \nareParallel \nLine2D.arePerpendicular \narePerpendicular \nLine2D.intersect \nintersect"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#through","title":"Line2D.through","content":"Line2D.through \nthrough \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#fromPointAndVector","title":"Line2D.fromPointAndVector","content":"Line2D.fromPointAndVector \nfromPointAndVector \n\n Create a line Starting at point in a particular direction and length\n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#direction","title":"Line2D.direction","content":"Line2D.direction \ndirection \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#length","title":"Line2D.length","content":"Line2D.length \nlength \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#axis","title":"Line2D.axis","content":"Line2D.axis \naxis \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#round","title":"Line2D.round","content":"Line2D.round \nround \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#pointClosestTo","title":"Line2D.pointClosestTo","content":"Line2D.pointClosestTo \npointClosestTo \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#distanceToPoint","title":"Line2D.distanceToPoint","content":"Line2D.distanceToPoint \ndistanceToPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#atPointInDirection","title":"Line2D.atPointInDirection","content":"Line2D.atPointInDirection \natPointInDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#isPointOnLine","title":"Line2D.isPointOnLine","content":"Line2D.isPointOnLine \nisPointOnLine \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#areParallel","title":"Line2D.areParallel","content":"Line2D.areParallel \nareParallel \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#arePerpendicular","title":"Line2D.arePerpendicular","content":"Line2D.arePerpendicular \narePerpendicular \n"},{"uri":"/fsharp-geometry/reference/geometry-line2dmodule.html#intersect","title":"Line2D.intersect","content":"Line2D.intersect \nintersect \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html","title":"LineSegment2D","content":"LineSegment2D \n \nLineSegment2D.from \nfrom \nLineSegment2D.fromEndpoints \nfromEndpoints \nLineSegment2D.safeFrom \nsafeFrom \nLineSegment2D.fromPointAndVector \nfromPointAndVector \nLineSegment2D.along \nalong \nLineSegment2D.start \nstart \nLineSegment2D.finish \nfinish \nLineSegment2D.endpoints \nendpoints \nLineSegment2D.vector \nvector \nLineSegment2D.direction \ndirection \nLineSegment2D.length \nlength \nLineSegment2D.axis \naxis \nLineSegment2D.perpendicularDirection \nperpendicularDirection \nLineSegment2D.midpoint \nmidpoint \nLineSegment2D.mapEndpoints \nmapEndpoints \nLineSegment2D.reverse \nreverse \nLineSegment2D.scaleAbout \nscaleAbout \nLineSegment2D.rotateAround \nrotateAround \nLineSegment2D.translateBy \ntranslateBy \nLineSegment2D.translateIn \ntranslateIn \nLineSegment2D.mirrorAcross \nmirrorAcross \nLineSegment2D.projectOnto \nprojectOnto \nLineSegment2D.round \nround \nLineSegment2D.interpolate \ninterpolate \nLineSegment2D.areParallel \nareParallel \nLineSegment2D.isPointOnSegment \nisPointOnSegment \nLineSegment2D.distanceToPoint \ndistanceToPoint \nLineSegment2D.pointClosestTo \npointClosestTo \nLineSegment2D.intersectionPoint \nintersectionPoint \nLineSegment2D.intersectionWithAxis \nintersectionWithAxis \nLineSegment2D.signedDistanceAlong \nsignedDistanceAlong \nLineSegment2D.signedDistanceFrom \nsignedDistanceFrom \nLineSegment2D.relativeTo \nrelativeTo \nLineSegment2D.placeIn \nplaceIn \nLineSegment2D.boundingBox \nboundingBox"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#from","title":"LineSegment2D.from","content":"LineSegment2D.from \nfrom \n\n Generate a segment segment from two points. This doesn\u0027t perform any checks ensuring that the points are not equal.\n If that is the behavior that you want you should use \u003Csee cref=\u0022safeFrom\u0022/\u003E function.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#fromEndpoints","title":"LineSegment2D.fromEndpoints","content":"LineSegment2D.fromEndpoints \nfromEndpoints \n\n Construct a segment segment from it\u0027s two endpoints as a tuple.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#safeFrom","title":"LineSegment2D.safeFrom","content":"LineSegment2D.safeFrom \nsafeFrom \n\n Safely create a segment segment. This function returns \u0060None\u0060 when the two points are almost equal.\n This has to do with the \u003Csee cref=\u0022Geometry.Internal.Tolerance\u0022/\u003E.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#fromPointAndVector","title":"LineSegment2D.fromPointAndVector","content":"LineSegment2D.fromPointAndVector \nfromPointAndVector \n\n Create a segment segment starting at point in a particular direction and length\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#along","title":"LineSegment2D.along","content":"LineSegment2D.along \nalong \n\n Construct a segment segment lying on the given axis, with its endpoints at the\n given distances from the axis\u0027 origin point.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#start","title":"LineSegment2D.start","content":"LineSegment2D.start \nstart \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#finish","title":"LineSegment2D.finish","content":"LineSegment2D.finish \nfinish \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#endpoints","title":"LineSegment2D.endpoints","content":"LineSegment2D.endpoints \nendpoints \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#vector","title":"LineSegment2D.vector","content":"LineSegment2D.vector \nvector \n\n Get the vector from the start point to the end point of the segment segment\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#direction","title":"LineSegment2D.direction","content":"LineSegment2D.direction \ndirection \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#length","title":"LineSegment2D.length","content":"LineSegment2D.length \nlength \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#axis","title":"LineSegment2D.axis","content":"LineSegment2D.axis \naxis \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#perpendicularDirection","title":"LineSegment2D.perpendicularDirection","content":"LineSegment2D.perpendicularDirection \nperpendicularDirection \n\n Get the direction perpendicular to a segment segment, pointing to the left. If\n the segment segment has zero length, returns \u0060Nothing\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#midpoint","title":"LineSegment2D.midpoint","content":"LineSegment2D.midpoint \nmidpoint \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#mapEndpoints","title":"LineSegment2D.mapEndpoints","content":"LineSegment2D.mapEndpoints \nmapEndpoints \n\n Transform the start and end points of a line segment by a given function\n and create a new line segment from the resulting points. Most other\n transformation functions can be defined in terms of \u0060mapEndpoints\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#reverse","title":"LineSegment2D.reverse","content":"LineSegment2D.reverse \nreverse \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#scaleAbout","title":"LineSegment2D.scaleAbout","content":"LineSegment2D.scaleAbout \nscaleAbout \n\n Scale a line segment about the given center point by the given scale.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#rotateAround","title":"LineSegment2D.rotateAround","content":"LineSegment2D.rotateAround \nrotateAround \n\n Rotate a line segment counterclockwise around a given center point by a\n given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#translateBy","title":"LineSegment2D.translateBy","content":"LineSegment2D.translateBy \ntranslateBy \n\n Translate a line segment by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#translateIn","title":"LineSegment2D.translateIn","content":"LineSegment2D.translateIn \ntranslateIn \n\n Translate a line segment in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#mirrorAcross","title":"LineSegment2D.mirrorAcross","content":"LineSegment2D.mirrorAcross \nmirrorAcross \n\n Mirror a line segment across an axis. Note that the endpoints of a mirrored\n segment are equal to the mirrored endpoints of the original segment, but as a\n result the normal direction of a mirrored segment is the _opposite_ of the\n mirrored normal direction of the original segment (since the normal direction is\n always considered to be \u0027to the left\u0027 of the line segment).\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#projectOnto","title":"LineSegment2D.projectOnto","content":"LineSegment2D.projectOnto \nprojectOnto \n\n Project a line segment onto an axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#round","title":"LineSegment2D.round","content":"LineSegment2D.round \nround \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#interpolate","title":"LineSegment2D.interpolate","content":"LineSegment2D.interpolate \ninterpolate \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#areParallel","title":"LineSegment2D.areParallel","content":"LineSegment2D.areParallel \nareParallel \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#isPointOnSegment","title":"LineSegment2D.isPointOnSegment","content":"LineSegment2D.isPointOnSegment \nisPointOnSegment \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#distanceToPoint","title":"LineSegment2D.distanceToPoint","content":"LineSegment2D.distanceToPoint \ndistanceToPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#pointClosestTo","title":"LineSegment2D.pointClosestTo","content":"LineSegment2D.pointClosestTo \npointClosestTo \n\n Get the point on a line segment that is closest to the input point.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#intersectionPoint","title":"LineSegment2D.intersectionPoint","content":"LineSegment2D.intersectionPoint \nintersectionPoint \n\n Try to find the intersection between two lines. If the lines are parallel (even if they are overlapping) then no\n intersection is returned\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#intersectionWithAxis","title":"LineSegment2D.intersectionWithAxis","content":"LineSegment2D.intersectionWithAxis \nintersectionWithAxis \n\n Attempt to find the unique intersection point of a line segment with an\n axis. If there is no such point (the line segment does not touch the axis, or\n lies perfectly along it), returns \u0060Nothing\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#signedDistanceAlong","title":"LineSegment2D.signedDistanceAlong","content":"LineSegment2D.signedDistanceAlong \nsignedDistanceAlong \n\n  Measure the distance of a line segment along an axis. This is the range of distances\n along the axis resulting from projecting the line segment perpendicularly onto the axis.\n Note that reversing the line segment will _not_ affect the result.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#signedDistanceFrom","title":"LineSegment2D.signedDistanceFrom","content":"LineSegment2D.signedDistanceFrom \nsignedDistanceFrom \n\n Measure the distance of a line segment from an axis. If the returned interval:\n  - is entirely positive, then the line segment is to the left of the axis\n  - is entirely negative, then the line segment is to the right of the axis\n  - contains zero, then the line segment crosses the axis\n Note that reversing the line segment will _not_ affect the result.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#relativeTo","title":"LineSegment2D.relativeTo","content":"LineSegment2D.relativeTo \nrelativeTo \n\n Take a line segment defined in global coordinates, and return it expressed\n in local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#placeIn","title":"LineSegment2D.placeIn","content":"LineSegment2D.placeIn \nplaceIn \n\n Take a line segment considered to be defined in local coordinates relative\n to a given reference frame, and return that line segment expressed in global\n coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2dmodule.html#boundingBox","title":"LineSegment2D.boundingBox","content":"LineSegment2D.boundingBox \nboundingBox \n\n Get the minimal bounding box containing a given line segment.\n"},{"uri":"/fsharp-geometry/reference/geometry-percentmodule.html","title":"Percent","content":"Percent \n \nPercent.ratio \nratio \nPercent.natural \nnatural \nPercent.asRatio \nasRatio \nPercent.asNatural \nasNatural"},{"uri":"/fsharp-geometry/reference/geometry-percentmodule.html#ratio","title":"Percent.ratio","content":"Percent.ratio \nratio \n\n Create a percentage from a ratio of numbers, a number in the range 0 to 1.\n"},{"uri":"/fsharp-geometry/reference/geometry-percentmodule.html#natural","title":"Percent.natural","content":"Percent.natural \nnatural \n\n Create a percentage from the natural range of percentages, from 0 to 100\n"},{"uri":"/fsharp-geometry/reference/geometry-percentmodule.html#asRatio","title":"Percent.asRatio","content":"Percent.asRatio \nasRatio \n\n Get a percentage from a ratio of numbers, a number in the range 0 to 1.\n"},{"uri":"/fsharp-geometry/reference/geometry-percentmodule.html#asNatural","title":"Percent.asNatural","content":"Percent.asNatural \nasNatural \n\n Get a percentage within  the natural range of percentages, from 0 to 100\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html","title":"Point2D","content":"Point2D \n \nPoint2D.ListTransform \nListTransform \nPoint2D.Transform \nTransform \nPoint2D.xy \nxy \nPoint2D.rTheta \nrTheta \nPoint2D.polar \npolar \nPoint2D.origin \norigin \nPoint2D.unsafe \nunsafe \nPoint2D.meters \nmeters \nPoint2D.pixels \npixels \nPoint2D.millimeters \nmillimeters \nPoint2D.centimeters \ncentimeters \nPoint2D.inches \ninches \nPoint2D.feet \nfeet \nPoint2D.unitless \nunitless \nPoint2D.plus \nplus \nPoint2D.minus \nminus \nPoint2D.vectorTo \nvectorTo \nPoint2D.neg \nneg \nPoint2D.times \ntimes \nPoint2D.scaleBy \nscaleBy \nPoint2D.dividedBy \ndividedBy \nPoint2D.x \nx \nPoint2D.y \ny \nPoint2D.magnitude \nmagnitude \nPoint2D.centroid \ncentroid \nPoint2D.centroidOf \ncentroidOf \nPoint2D.centroid3 \ncentroid3 \nPoint2D.centroidN \ncentroidN \nPoint2D.toVector \ntoVector \nPoint2D.scaleTo \nscaleTo \nPoint2D.rotateBy \nrotateBy \nPoint2D.translate \ntranslate \nPoint2D.rotateAround \nrotateAround \nPoint2D.placeIn \nplaceIn \nPoint2D.translateIn \ntranslateIn \nPoint2D.translateBy \ntranslateBy \nPoint2D.mirrorAcross \nmirrorAcross \nPoint2D.equalWithin \nequalWithin \nPoint2D.distanceSquaredTo \ndistanceSquaredTo \nPoint2D.distanceTo \ndistanceTo \nPoint2D.midpoint \nmidpoint \nPoint2D.lerp \nlerp \nPoint2D.direction \ndirection \nPoint2D.round \nround \nPoint2D.roundTo \nroundTo \nPoint2D.circumcenter \ncircumcenter \nPoint2D.projectOnto \nprojectOnto \nPoint2D.interpolateFrom \ninterpolateFrom \nPoint2D.along \nalong \nPoint2D.signedDistanceAlong \nsignedDistanceAlong \nPoint2D.signedDistanceFrom \nsignedDistanceFrom \nPoint2D.scaleAbout \nscaleAbout \nPoint2D.xyIn \nxyIn \nPoint2D.rThetaIn \nrThetaIn \nPoint2D.xCoordinateIn \nxCoordinateIn \nPoint2D.yCoordinateIn \nyCoordinateIn \nPoint2D.coordinates \ncoordinates \nPoint2D.coordinatesIn \ncoordinatesIn \nPoint2D.relativeTo \nrelativeTo \nPoint2D.fromList \nfromList \nPoint2D.toList \ntoList"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#xy","title":"Point2D.xy","content":"Point2D.xy \nxy \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#rTheta","title":"Point2D.rTheta","content":"Point2D.rTheta \nrTheta \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#polar","title":"Point2D.polar","content":"Point2D.polar \npolar \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#origin","title":"Point2D.origin","content":"Point2D.origin \norigin \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#unsafe","title":"Point2D.unsafe","content":"Point2D.unsafe \nunsafe \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#meters","title":"Point2D.meters","content":"Point2D.meters \nmeters \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#pixels","title":"Point2D.pixels","content":"Point2D.pixels \npixels \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#millimeters","title":"Point2D.millimeters","content":"Point2D.millimeters \nmillimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#centimeters","title":"Point2D.centimeters","content":"Point2D.centimeters \ncentimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#inches","title":"Point2D.inches","content":"Point2D.inches \ninches \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#feet","title":"Point2D.feet","content":"Point2D.feet \nfeet \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#unitless","title":"Point2D.unitless","content":"Point2D.unitless \nunitless \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#plus","title":"Point2D.plus","content":"Point2D.plus \nplus \n\n This function is designed to be used in piping operators.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#minus","title":"Point2D.minus","content":"Point2D.minus \nminus \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#vectorTo","title":"Point2D.vectorTo","content":"Point2D.vectorTo \nvectorTo \n\n Be careful with the vector arguments. This function is written with piping in mind. The first point is the\n target location. The second point is the starting location.\n This is also an alias for \u0060minus\u0060 and is \u0060target - from\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#neg","title":"Point2D.neg","content":"Point2D.neg \nneg \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#times","title":"Point2D.times","content":"Point2D.times \ntimes \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#scaleBy","title":"Point2D.scaleBy","content":"Point2D.scaleBy \nscaleBy \n\n Alias for \u0060times\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#dividedBy","title":"Point2D.dividedBy","content":"Point2D.dividedBy \ndividedBy \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#x","title":"Point2D.x","content":"Point2D.x \nx \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#y","title":"Point2D.y","content":"Point2D.y \ny \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#magnitude","title":"Point2D.magnitude","content":"Point2D.magnitude \nmagnitude \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#centroid","title":"Point2D.centroid","content":"Point2D.centroid \ncentroid \n\n Find the centroid (average) of one or more points, by passing the first\n point and then all remaining points. This allows this function to return a\n \u0060Point2d\u0060 instead of a \u0060Maybe Point2d\u0060. You would generally use \u0060centroid\u0060\n within a \u0060case\u0060 expression.\n Alternatively, you can use [\u0060centroidN\u0060](#centroidN) instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#centroidOf","title":"Point2D.centroidOf","content":"Point2D.centroidOf \ncentroidOf \n\n Like \u0060centroid\u0060, but lets you work with any kind of data as long as a point\n can be extracted/constructed from it. For example, to get the centroid of a\n bunch of vertices.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#centroid3","title":"Point2D.centroid3","content":"Point2D.centroid3 \ncentroid3 \n\n Find the centroid of three points\n \u0060Point2D.centroid3d p1 p2 p3\u0060 is equivalent to\n \u0060Point2d.centroid p1 [ p2, p3 ]\u0060\n but is more efficient.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#centroidN","title":"Point2D.centroidN","content":"Point2D.centroidN \ncentroidN \n\n Find the centroid of a list of _N_ points. If the list is empty, returns\n \u0060Nothing\u0060. If you know you have at least one point, you can use\n [\u0060centroid\u0060](#centroid) instead to avoid the \u0060Option\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#toVector","title":"Point2D.toVector","content":"Point2D.toVector \ntoVector \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#scaleTo","title":"Point2D.scaleTo","content":"Point2D.scaleTo \nscaleTo \n\n Scale a point to a given length.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#rotateBy","title":"Point2D.rotateBy","content":"Point2D.rotateBy \nrotateBy \n\n Rotate a point counterclockwise by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#translate","title":"Point2D.translate","content":"Point2D.translate \ntranslate \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#rotateAround","title":"Point2D.rotateAround","content":"Point2D.rotateAround \nrotateAround \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#placeIn","title":"Point2D.placeIn","content":"Point2D.placeIn \nplaceIn \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#translateIn","title":"Point2D.translateIn","content":"Point2D.translateIn \ntranslateIn \n\n Translate a point in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#translateBy","title":"Point2D.translateBy","content":"Point2D.translateBy \ntranslateBy \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#mirrorAcross","title":"Point2D.mirrorAcross","content":"Point2D.mirrorAcross \nmirrorAcross \n\n Mirror a point across an axis. The result will be the same distance from the\n axis but on the opposite side.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#equalWithin","title":"Point2D.equalWithin","content":"Point2D.equalWithin \nequalWithin \n\n Compare two points within a tolerance. Returns true if the distance\n between the two given points is less than the given tolerance.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#distanceSquaredTo","title":"Point2D.distanceSquaredTo","content":"Point2D.distanceSquaredTo \ndistanceSquaredTo \n\n Find the squared distance from the first point to the second.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#distanceTo","title":"Point2D.distanceTo","content":"Point2D.distanceTo \ndistanceTo \n\n Find the distance from the first point to the second.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#midpoint","title":"Point2D.midpoint","content":"Point2D.midpoint \nmidpoint \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#lerp","title":"Point2D.lerp","content":"Point2D.lerp \nlerp \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#direction","title":"Point2D.direction","content":"Point2D.direction \ndirection \n\n Get the direction the a point is facing.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#round","title":"Point2D.round","content":"Point2D.round \nround \n\n Round the point to the internal precision.\n (Default is 8 digits past the decimal point)\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#roundTo","title":"Point2D.roundTo","content":"Point2D.roundTo \nroundTo \n\n Round the point to a specified number of digits\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#circumcenter","title":"Point2D.circumcenter","content":"Point2D.circumcenter \ncircumcenter \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#projectOnto","title":"Point2D.projectOnto","content":"Point2D.projectOnto \nprojectOnto \n\n Project a point perpendicularly onto an axis.\n The axis does not have to pass through the origin:\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#interpolateFrom","title":"Point2D.interpolateFrom","content":"Point2D.interpolateFrom \ninterpolateFrom \n\n Construct a point by interpolating from the first given point to the second,\n based on a parameter that ranges from zero to one.\n You can pass values less than zero or greater than one to extrapolate.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#along","title":"Point2D.along","content":"Point2D.along \nalong \n\n Construct a point along an axis at a particular distance from the axis\u0027\n origin point.\n Positive and negative distances will be interpreted relative to the direction of\n the axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#signedDistanceAlong","title":"Point2D.signedDistanceAlong","content":"Point2D.signedDistanceAlong \nsignedDistanceAlong \n\n  Determine how far along an axis a particular point lies. Conceptually, the\n point is projected perpendicularly onto the axis, and then the distance of this\n projected point from the axis\u0027 origin point is measured. The result will be\n positive if the projected point is ahead the axis\u0027 origin point and negative if\n it is behind, with \u0027ahead\u0027 and \u0027behind\u0027 defined by the direction of the axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#signedDistanceFrom","title":"Point2D.signedDistanceFrom","content":"Point2D.signedDistanceFrom \nsignedDistanceFrom \n\n Find the perpendicular distance of a point from an axis. The result\n will be positive if the point is to the left of the axis and negative if it is\n to the right, with the forwards direction defined by the direction of the axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#scaleAbout","title":"Point2D.scaleAbout","content":"Point2D.scaleAbout \nscaleAbout \n\n Perform a uniform scaling about the given center point. The center point is\n given first and the point to transform is given last. Points will contract or\n expand about the center point by the given scale. Scaling by a factor of 1 is a\n no-op, and scaling by a factor of 0 collapses all points to the center point.\n Avoid scaling by a negative scaling factor - while this may sometimes do what\n you want it is confusing and error prone. Try a combination of mirror and/or\n rotation operations instead.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#xyIn","title":"Point2D.xyIn","content":"Point2D.xyIn \nxyIn \n\n Construct a point given its local coordinates within a particular frame:\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#rThetaIn","title":"Point2D.rThetaIn","content":"Point2D.rThetaIn \nrThetaIn \n\n Construct a point given its local polar coordinates within a particular\n frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#xCoordinateIn","title":"Point2D.xCoordinateIn","content":"Point2D.xCoordinateIn \nxCoordinateIn \n\n Find the X coordinate of a point relative to a given frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#yCoordinateIn","title":"Point2D.yCoordinateIn","content":"Point2D.yCoordinateIn \nyCoordinateIn \n\n Find the Y coordinate of a point relative to a given frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#coordinates","title":"Point2D.coordinates","content":"Point2D.coordinates \ncoordinates \n\n Get the X and Y coordinates of a point as a tuple.\n Point2d.coordinates (Point2d.meters 2 3)\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#coordinatesIn","title":"Point2D.coordinatesIn","content":"Point2D.coordinatesIn \ncoordinatesIn \n\n Get the X and Y coordinates of a point relative to a given frame, as a\n tuple; these are the coordinates the point would have as viewed by an observer\n in that frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#relativeTo","title":"Point2D.relativeTo","content":"Point2D.relativeTo \nrelativeTo \n\n Take a point defined in global coordinates, and return it expressed in local\n coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#fromList","title":"Point2D.fromList","content":"Point2D.fromList \nfromList \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule.html#toList","title":"Point2D.toList","content":"Point2D.toList \ntoList \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule-listtransform.html","title":"ListTransform","content":"ListTransform \n \nListTransform.( .ctor ) \n( .ctor )"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule-listtransform.html#( .ctor )","title":"ListTransform.( .ctor )","content":"ListTransform.( .ctor ) \n( .ctor ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule-transform.html","title":"Transform","content":"Transform \n \nTransform.( .ctor ) \n( .ctor )"},{"uri":"/fsharp-geometry/reference/geometry-point2dmodule-transform.html#( .ctor )","title":"Transform.( .ctor )","content":"Transform.( .ctor ) \n( .ctor ) \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html","title":"Polygon2D","content":"Polygon2D \n \nPolygon2D.withHoles \nwithHoles \nPolygon2D.singleLoop \nsingleLoop \nPolygon2D.counterclockwiseAround \ncounterclockwiseAround \nPolygon2D.chain \nchain \nPolygon2D.convexHull \nconvexHull \nPolygon2D.outerLoop \nouterLoop \nPolygon2D.innerLoops \ninnerLoops \nPolygon2D.vertices \nvertices \nPolygon2D.loopEdges \nloopEdges \nPolygon2D.edges \nedges \nPolygon2D.perimeter \nperimeter \nPolygon2D.area \narea \nPolygon2D.centroid \ncentroid \nPolygon2D.mapVertices \nmapVertices \nPolygon2D.scaleAbout \nscaleAbout \nPolygon2D.rotateAround \nrotateAround \nPolygon2D.translateBy \ntranslateBy \nPolygon2D.translateIn \ntranslateIn \nPolygon2D.mirrorAcross \nmirrorAcross \nPolygon2D.translate \ntranslate \nPolygon2D.relativeTo \nrelativeTo \nPolygon2D.placeIn \nplaceIn \nPolygon2D.boundingBox \nboundingBox \nPolygon2D.contains \ncontains"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#withHoles","title":"Polygon2D.withHoles","content":"Polygon2D.withHoles \nwithHoles \n\n Construct a polygon with holes from one outer loop and a list of inner\n loops. The loops must not touch or intersect each other.\n\n     let outerLoop =\n         [ Point2D.meters 0. 0.\n           Point2D.meters 3. 0.\n           Point2D.meters 3. 3.\n           Point2D.meters 0. 3.\n         ]\n     let innerLoop =\n         [ Point2D.meters 1. 1.\n           Point2D.meters 1. 2.\n           Point2D.meters 2. 2.\n           Point2D.meters 2. 1.\n         ]\n     let squareWithHole =\n         Polygon2D.withHoles [ innerLoop ] outerLoop\n\n As with \u0060Polygon2D.singleLoop\u0060, the last vertex of each loop is considered to be\n connected back to the first. Vertices of the outer loop should ideally be\n provided in counterclockwise order and vertices of the inner loops should\n ideally be provided in clockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#singleLoop","title":"Polygon2D.singleLoop","content":"Polygon2D.singleLoop \nsingleLoop \n\n Construct a polygon without holes from a list of its vertices:\n\n     let rectangle =\n         Polygon2D.singleLoop\n             [ Point2D.meters 1. 1.\n               Point2D.meters 3. 1.\n               Point2D.meters 3. 2.\n               Point2D.meters 1. 2.\n             ]\n\n The last vertex is implicitly considered to be connected back to the first\n vertex (you do not have to close the polygon explicitly). Vertices should\n ideally be provided in counterclockwise order; if they are provided in clockwise\n order they will be reversed.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#counterclockwiseAround","title":"Polygon2D.counterclockwiseAround","content":"Polygon2D.counterclockwiseAround \ncounterclockwiseAround \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#chain","title":"Polygon2D.chain","content":"Polygon2D.chain \nchain \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#convexHull","title":"Polygon2D.convexHull","content":"Polygon2D.convexHull \nconvexHull \n\n Build the [convex hull](https://en.wikipedia.org/wiki/Convex_hull) of a list\n of points. This is an O(n log n) operation.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#outerLoop","title":"Polygon2D.outerLoop","content":"Polygon2D.outerLoop \nouterLoop \n\n Get the list of vertices defining the outer loop (border) of a polygon.\n The vertices will be in counterclockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#innerLoops","title":"Polygon2D.innerLoops","content":"Polygon2D.innerLoops \ninnerLoops \n\n Get the holes (if any) of a polygon, each defined by a list of vertices.\n Each list of vertices will be in clockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#vertices","title":"Polygon2D.vertices","content":"Polygon2D.vertices \nvertices \n\n Get all vertices of a polygon; this will include vertices from the outer\n loop of the polygon and all inner loops. The order of the returned vertices is\n undefined.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#loopEdges","title":"Polygon2D.loopEdges","content":"Polygon2D.loopEdges \nloopEdges \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#edges","title":"Polygon2D.edges","content":"Polygon2D.edges \nedges \n\n Get all edges of a polygon. This will include both outer edges and inner\n (hole) edges.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#perimeter","title":"Polygon2D.perimeter","content":"Polygon2D.perimeter \nperimeter \n\n Get the perimeter of a polygon (the sum of the lengths of its edges). This\n includes the outer perimeter and the perimeter of any holes.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#area","title":"Polygon2D.area","content":"Polygon2D.area \narea \n\n Get the area of a polygon. This value will never be negative.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#centroid","title":"Polygon2D.centroid","content":"Polygon2D.centroid \ncentroid \n\n Get the centroid of a polygon. Returns \u0060Nothing\u0060 if the polygon has no\n vertices or zero area.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#mapVertices","title":"Polygon2D.mapVertices","content":"Polygon2D.mapVertices \nmapVertices \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#scaleAbout","title":"Polygon2D.scaleAbout","content":"Polygon2D.scaleAbout \nscaleAbout \n\n Scale a polygon about a given center point by a given scale. If the given\n scale is negative, the order of the polygon\u0027s vertices will be reversed so that\n the resulting polygon still has its outer vertices in counterclockwise order and\n its inner vertices in clockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#rotateAround","title":"Polygon2D.rotateAround","content":"Polygon2D.rotateAround \nrotateAround \n\n Rotate a polygon around the given center point counterclockwise by the given\n angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#translateBy","title":"Polygon2D.translateBy","content":"Polygon2D.translateBy \ntranslateBy \n\n Translate a polygon by the given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#translateIn","title":"Polygon2D.translateIn","content":"Polygon2D.translateIn \ntranslateIn \n\n Translate a polygon in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#mirrorAcross","title":"Polygon2D.mirrorAcross","content":"Polygon2D.mirrorAcross \nmirrorAcross \n\n Mirror a polygon across the given axis. The order of the polygon\u0027s vertices\n will be reversed so that the resulting polygon still has its outer vertices in\n counterclockwise order and its inner vertices in clockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#translate","title":"Polygon2D.translate","content":"Polygon2D.translate \ntranslate \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#relativeTo","title":"Polygon2D.relativeTo","content":"Polygon2D.relativeTo \nrelativeTo \n\n Take a polygon defined in global coordinates, and return it expressed in\n local coordinates relative to a given reference frame. If the given frame is\n left-handed, the order of the polygon\u0027s vertices will be reversed so that the\n resulting polygon still has its outer vertices in counterclockwise order and its\n inner vertices in clockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#placeIn","title":"Polygon2D.placeIn","content":"Polygon2D.placeIn \nplaceIn \n\n Take a polygon considered to be defined in local coordinates relative to a\n given reference frame, and return that polygon expressed in global coordinates.\n If the given frame is left-handed, the order of the polygon\u0027s vertices will be\n reversed so that the resulting polygon still has its outer vertices in\n counterclockwise order and its inner vertices in clockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#boundingBox","title":"Polygon2D.boundingBox","content":"Polygon2D.boundingBox \nboundingBox \n\n Get the minimal bounding box containing a given polygon. Returns \u0060None\u0060\n if the polygon has no vertices.\n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2dmodule.html#contains","title":"Polygon2D.contains","content":"Polygon2D.contains \ncontains \n\n Check if a polygon contains a given point.\n This is an O(n) operation. The polygon can have holes and does not need to be convex.\n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html","title":"Polyline2D","content":"Polyline2D \n \nPolyline2D.fromVertices \nfromVertices \nPolyline2D.vertices \nvertices \nPolyline2D.segments \nsegments \nPolyline2D.length \nlength \nPolyline2D.mapVertices \nmapVertices \nPolyline2D.scaleAbout \nscaleAbout \nPolyline2D.rotateAround \nrotateAround \nPolyline2D.translateBy \ntranslateBy \nPolyline2D.translateIn \ntranslateIn \nPolyline2D.mirrorAcross \nmirrorAcross \nPolyline2D.projectOnto \nprojectOnto \nPolyline2D.relativeTo \nrelativeTo \nPolyline2D.placeIn \nplaceIn \nPolyline2D.boundingBox \nboundingBox \nPolyline2D.centroid \ncentroid"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#fromVertices","title":"Polyline2D.fromVertices","content":"Polyline2D.fromVertices \nfromVertices \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#vertices","title":"Polyline2D.vertices","content":"Polyline2D.vertices \nvertices \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#segments","title":"Polyline2D.segments","content":"Polyline2D.segments \nsegments \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#length","title":"Polyline2D.length","content":"Polyline2D.length \nlength \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#mapVertices","title":"Polyline2D.mapVertices","content":"Polyline2D.mapVertices \nmapVertices \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#scaleAbout","title":"Polyline2D.scaleAbout","content":"Polyline2D.scaleAbout \nscaleAbout \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#rotateAround","title":"Polyline2D.rotateAround","content":"Polyline2D.rotateAround \nrotateAround \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#translateBy","title":"Polyline2D.translateBy","content":"Polyline2D.translateBy \ntranslateBy \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#translateIn","title":"Polyline2D.translateIn","content":"Polyline2D.translateIn \ntranslateIn \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#mirrorAcross","title":"Polyline2D.mirrorAcross","content":"Polyline2D.mirrorAcross \nmirrorAcross \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#projectOnto","title":"Polyline2D.projectOnto","content":"Polyline2D.projectOnto \nprojectOnto \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#relativeTo","title":"Polyline2D.relativeTo","content":"Polyline2D.relativeTo \nrelativeTo \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#placeIn","title":"Polyline2D.placeIn","content":"Polyline2D.placeIn \nplaceIn \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#boundingBox","title":"Polyline2D.boundingBox","content":"Polyline2D.boundingBox \nboundingBox \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2dmodule.html#centroid","title":"Polyline2D.centroid","content":"Polyline2D.centroid \ncentroid \n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html","title":"Rectangle2D","content":"Rectangle2D \n \nRectangle2D.from \nfrom \nRectangle2D.fromPoints \nfromPoints \nRectangle2D.withDimensions \nwithDimensions \nRectangle2D.centeredOn \ncenteredOn \nRectangle2D.withXAxis \nwithXAxis \nRectangle2D.withYAxis \nwithYAxis \nRectangle2D.fromBoundingBox \nfromBoundingBox \nRectangle2D.axes \naxes \nRectangle2D.xAxis \nxAxis \nRectangle2D.yAxis \nyAxis \nRectangle2D.centerPoint \ncenterPoint \nRectangle2D.dimensions \ndimensions \nRectangle2D.area \narea \nRectangle2D.vertices \nvertices \nRectangle2D.toPolygon \ntoPolygon \nRectangle2D.contains \ncontains \nRectangle2D.edges \nedges \nRectangle2D.boundingBox \nboundingBox \nRectangle2D.scaleAbout \nscaleAbout \nRectangle2D.rotateAround \nrotateAround \nRectangle2D.translateBy \ntranslateBy \nRectangle2D.translateIn \ntranslateIn \nRectangle2D.mirrorAcross \nmirrorAcross \nRectangle2D.placeIn \nplaceIn \nRectangle2D.relativeTo \nrelativeTo \nRectangle2D.interpolate \ninterpolate"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#from","title":"Rectangle2D.from","content":"Rectangle2D.from \nfrom \n\n Construct an axis-aligned rectangle given the X and Y coordinates of two\n diagonally opposite vertices. The X and Y directions of the resulting rectangle\n are determined by the order of the given values:\n   - If \u0060x1 \u003C= x2\u0060, then the rectangle\u0027s X direction will be\n     \u0060Direction2D.positiveX\u0060, otherwise it will be \u0060Direction2D.negativeX\u0060\n   - If \u0060y1 \u003C= y2\u0060, then the rectangle\u0027s Y direction will be\n     \u0060Direction2D.positiveY\u0060, otherwise it will be \u0060Direction2D.negativeY\u0060\n Therefore, something like\n     Rectangle2D.from\n         (Pixels.pixels 0)\n         (Pixels.pixels 300)\n         (Pixels.pixels 500)\n         (Pixels.pixels 0)\n would have its X direction equal to \u0060Direction2D.positiveX\u0060 and its Y direction\n equal to \u0060Direction2D.negativeY\u0060.\n -}\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#fromPoints","title":"Rectangle2D.fromPoints","content":"Rectangle2D.fromPoints \nfromPoints \n\n Construct an axis-aligned rectangle stretching from one point to another;\n     Rectangle2D.from p1 p2\n is equivalent to\n     Rectangle2D.with p1.X p1.Y p2.X p2.Y\n and so the same logic about the resulting rectangle\u0027s X and Y directions\n applies (see above for details). Therefore, assuming a Y-up coordinate system,\n something like\n     Rectangle2D.from lowerLeftPoint upperRightPoint\n would have positive X and Y directions, while\n     Rectangle2D.from upperLeftPoint lowerRightPoint\n would have a positive X direction but a negative Y direction.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#withDimensions","title":"Rectangle2D.withDimensions","content":"Rectangle2D.withDimensions \nwithDimensions \n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#centeredOn","title":"Rectangle2D.centeredOn","content":"Rectangle2D.centeredOn \ncenteredOn \n\n Construct a frame centered on the given axes, with the given overall\n dimensions;\n     Rectangle2D.withDimensions dimensions angle centerPoint\n could be written as\n     Rectangle2D.centeredOn\n         (Frame2D.withAngle angle centerPoint)\n         dimensions\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#withXAxis","title":"Rectangle2D.withXAxis","content":"Rectangle2D.withXAxis \nwithXAxis \n\n Construct a rectangle with the given X axis and overall dimensions. The\n rectangle will be centered on the axis\u0027 origin point.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#withYAxis","title":"Rectangle2D.withYAxis","content":"Rectangle2D.withYAxis \nwithYAxis \n\n Construct a rectangle with the given Y axis and overall dimensions. The\n rectangle will be centered on the axis\u0027 origin point.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#fromBoundingBox","title":"Rectangle2D.fromBoundingBox","content":"Rectangle2D.fromBoundingBox \nfromBoundingBox \n\n Convert a \u0060BoundingBox2D\u0060 to the equivalent axis-aligned \u0060Rectangle2D\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#axes","title":"Rectangle2D.axes","content":"Rectangle2D.axes \naxes \n\n Get the central axes of a rectangle as a \u0060Frame2D\u0060:\n     rectangle =\n         Rectangle2D.with\n             (Length.meters 2)\n             (Length.meters 5)\n             (Length.meters 1)\n             (Length.meters 3)\n     Rectangle2D.axes rectangle\n     --\u003E Frame2D.atPoint (Point2D.meters 3.5 2)\n The origin point of the frame will be the center point of the rectangle.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#xAxis","title":"Rectangle2D.xAxis","content":"Rectangle2D.xAxis \nxAxis \n\n Get the X axis of a rectangle.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#yAxis","title":"Rectangle2D.yAxis","content":"Rectangle2D.yAxis \nyAxis \n\n Get the Y axis of a rectangle.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#centerPoint","title":"Rectangle2D.centerPoint","content":"Rectangle2D.centerPoint \ncenterPoint \n\n Get the center point of a rectangle.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#dimensions","title":"Rectangle2D.dimensions","content":"Rectangle2D.dimensions \ndimensions \n\n Get the overall dimensions (width and height) of a rectangle:\n     rectangle =\n         Rectangle2D.with\n             { x1 = Length.meters 2\n             , x2 = Length.meters 5\n             , y1 = Length.meters 1\n             , y2 = Length.meters 3\n             }\n     Rectangle2D.dimensions rectangle\n     --\u003E ( Length.meters 3, Length.meters 2 )\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#area","title":"Rectangle2D.area","content":"Rectangle2D.area \narea \n\n Get the area of a rectangle.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#vertices","title":"Rectangle2D.vertices","content":"Rectangle2D.vertices \nvertices \n\n Get the vertices of a rectangle as a list. The vertices will be returned\n in counterclockwise order if the rectangle\u0027s axes are right-handed, and\n clockwise order if the axes are left-handed.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#toPolygon","title":"Rectangle2D.toPolygon","content":"Rectangle2D.toPolygon \ntoPolygon \n\n Convert a rectangle to a [\u0060Polygon2D\u0060](Polygon2D#Polygon2D).\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#contains","title":"Rectangle2D.contains","content":"Rectangle2D.contains \ncontains \n\n Check if a rectangle contains a given point.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#edges","title":"Rectangle2D.edges","content":"Rectangle2D.edges \nedges \n\n Get the edges of a rectangle as a list. The edges will be returned\n in counterclockwise order if the rectangle\u0027s axes are right-handed, and\n clockwise order if the axes are left-handed.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#boundingBox","title":"Rectangle2D.boundingBox","content":"Rectangle2D.boundingBox \nboundingBox \n\n Get the minimal bounding box containing a given rectangle. This will have\n exactly the same shape and size as the rectangle itself if the rectangle is\n axis-aligned, but will be larger than the rectangle if the rectangle is at an\n angle.\n     square =\n         Rectangle2D.with\n             { x1 = Length.meters 0\n             , x2 = Length.meters 1\n             , y1 = Length.meters 0\n             , y2 = Length.meters 1\n             }\n     diamond =\n         square\n             |\u003E Rectangle2D.rotateAround Point2D.origin\n                 (Angle.degrees 45)\n     Rectangle2D.boundingBox diamond\n     --\u003E BoundingBox2D.from\n     --\u003E     (Point2D.meters -0.7071 0)\n     --\u003E     (Point2D.meters 0.7071 1.4142)\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#scaleAbout","title":"Rectangle2D.scaleAbout","content":"Rectangle2D.scaleAbout \nscaleAbout \n\n Scale a rectangle about a given point by a given scale. Note that scaling by\n a negative value will flip the handedness of the rectangle\u0027s axes, and therefore\n the order/direction of results from \u0060Rectangle2D.vertices\u0060 and\n \u0060Rectangle2D.edges\u0060 will change.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#rotateAround","title":"Rectangle2D.rotateAround","content":"Rectangle2D.rotateAround \nrotateAround \n\n Rotate a rectangle around a given point by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#translateBy","title":"Rectangle2D.translateBy","content":"Rectangle2D.translateBy \ntranslateBy \n\n Translate a rectangle by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#translateIn","title":"Rectangle2D.translateIn","content":"Rectangle2D.translateIn \ntranslateIn \n\n Translate a rectangle in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#mirrorAcross","title":"Rectangle2D.mirrorAcross","content":"Rectangle2D.mirrorAcross \nmirrorAcross \n\n Mirror a rectangle across a given axis. Note that this will flip the\n handedness of the rectangle\u0027s axes, and therefore the order/direction of results\n from \u0060Rectangle2D.vertices\u0060 and \u0060Rectangle2D.edges\u0060 will change.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#placeIn","title":"Rectangle2D.placeIn","content":"Rectangle2D.placeIn \nplaceIn \n\n Take a rectangle considered to be defined in local coordinates relative to a\n given reference frame, and return that rectangle expressed in global\n coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#relativeTo","title":"Rectangle2D.relativeTo","content":"Rectangle2D.relativeTo \nrelativeTo \n\n Take a rectangle defined in global coordinates, and return it expressed\n in local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2dmodule.html#interpolate","title":"Rectangle2D.interpolate","content":"Rectangle2D.interpolate \ninterpolate \n\n Interpolate within a rectangle based on coordinates which range from 0 to 1.\n For example, the four vertices of a given rectangle are\n     [ Rectangle2D.interpolate rectangle 0 0\n       Rectangle2D.interpolate rectangle 1 0\n       Rectangle2D.interpolate rectangle 1 1\n       Rectangle2D.interpolate rectangle 0 1\n     ]\n and its center point is\n     Rectangle2D.interpolate rectangle 0.5 0.5\n"},{"uri":"/fsharp-geometry/reference/geometry-size2dmodule.html","title":"Size2D","content":"Size2D \n \nSize2D.empty \nempty \nSize2D.create \ncreate \nSize2D.scale \nscale \nSize2D.normalizeBelowOne \nnormalizeBelowOne \nSize2D.withMaxSize \nwithMaxSize"},{"uri":"/fsharp-geometry/reference/geometry-size2dmodule.html#empty","title":"Size2D.empty","content":"Size2D.empty \nempty \n"},{"uri":"/fsharp-geometry/reference/geometry-size2dmodule.html#create","title":"Size2D.create","content":"Size2D.create \ncreate \n"},{"uri":"/fsharp-geometry/reference/geometry-size2dmodule.html#scale","title":"Size2D.scale","content":"Size2D.scale \nscale \n"},{"uri":"/fsharp-geometry/reference/geometry-size2dmodule.html#normalizeBelowOne","title":"Size2D.normalizeBelowOne","content":"Size2D.normalizeBelowOne \nnormalizeBelowOne \n"},{"uri":"/fsharp-geometry/reference/geometry-size2dmodule.html#withMaxSize","title":"Size2D.withMaxSize","content":"Size2D.withMaxSize \nwithMaxSize \n"},{"uri":"/fsharp-geometry/reference/geometry-sweptanglemodule.html","title":"SweptAngle","content":"SweptAngle \n \nSweptAngle.smallPositive \nsmallPositive \nSweptAngle.smallNegative \nsmallNegative \nSweptAngle.largePositive \nlargePositive \nSweptAngle.largeNegative \nlargeNegative"},{"uri":"/fsharp-geometry/reference/geometry-sweptanglemodule.html#smallPositive","title":"SweptAngle.smallPositive","content":"SweptAngle.smallPositive \nsmallPositive \n\n Construct a counterclockwise arc with a swept angle between 0 and 180\n degrees.\n"},{"uri":"/fsharp-geometry/reference/geometry-sweptanglemodule.html#smallNegative","title":"SweptAngle.smallNegative","content":"SweptAngle.smallNegative \nsmallNegative \n\n Construct a clockwise arc with a swept angle between 0 and -180 degrees.\n"},{"uri":"/fsharp-geometry/reference/geometry-sweptanglemodule.html#largePositive","title":"SweptAngle.largePositive","content":"SweptAngle.largePositive \nlargePositive \n\n Construct a counterclockwise arc with a swept angle between 180 and 360\n degrees.\n"},{"uri":"/fsharp-geometry/reference/geometry-sweptanglemodule.html#largeNegative","title":"SweptAngle.largeNegative","content":"SweptAngle.largeNegative \nlargeNegative \n\n Construct a clockwise arc with a swept angle between -180 and -360 degrees.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html","title":"Triangle2D","content":"Triangle2D \n \nTriangle2D.from \nfrom \nTriangle2D.fromVertices \nfromVertices \nTriangle2D.vertices \nvertices \nTriangle2D.edges \nedges \nTriangle2D.centroid \ncentroid \nTriangle2D.circumcircle \ncircumcircle \nTriangle2D.mapVertices \nmapVertices \nTriangle2D.scaleAbout \nscaleAbout \nTriangle2D.rotateAround \nrotateAround \nTriangle2D.translateBy \ntranslateBy \nTriangle2D.translateIn \ntranslateIn \nTriangle2D.mirrorAcross \nmirrorAcross \nTriangle2D.relativeTo \nrelativeTo \nTriangle2D.placeIn \nplaceIn \nTriangle2D.contains \ncontains \nTriangle2D.counterclockwiseArea \ncounterclockwiseArea \nTriangle2D.clockwiseArea \nclockwiseArea \nTriangle2D.area \narea"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#from","title":"Triangle2D.from","content":"Triangle2D.from \nfrom \n\n Construct a triangle from the first point, to the second, to the third.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#fromVertices","title":"Triangle2D.fromVertices","content":"Triangle2D.fromVertices \nfromVertices \n\n Construct a triangle from its three vertices.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#vertices","title":"Triangle2D.vertices","content":"Triangle2D.vertices \nvertices \n\n Get the three vertices of the triangle\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#edges","title":"Triangle2D.edges","content":"Triangle2D.edges \nedges \n\n Get the edges of a triangle: from the first vertex to the second, from the\n second to the third, and from the third back to the first.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#centroid","title":"Triangle2D.centroid","content":"Triangle2D.centroid \ncentroid \n\n Get the centroid (center of mass) of a triangle.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#circumcircle","title":"Triangle2D.circumcircle","content":"Triangle2D.circumcircle \ncircumcircle \n\n Attempt to find the circumcircle of a triangle, a circle that passes through\n each of the triangle\u0027s vertices;\n If the triangle is degenerate (its three vertices are collinear), returns\n \u0060None\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#mapVertices","title":"Triangle2D.mapVertices","content":"Triangle2D.mapVertices \nmapVertices \n\n Transform each vertex of a triangle by a given function and create a new\n triangle from the resulting points. Most other transformation functions can be\n defined in terms of \u0060mapVertices\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#scaleAbout","title":"Triangle2D.scaleAbout","content":"Triangle2D.scaleAbout \nscaleAbout \n\n Scale a triangle about a given point by a given scale. Note that scaling by\n a negative value will result in the \u0027winding direction\u0027 of the triangle being\n flipped - if the triangle\u0027s vertices were in counterclockwise order before the\n negative scaling, they will be in clockwise order afterwards and vice versa.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#rotateAround","title":"Triangle2D.rotateAround","content":"Triangle2D.rotateAround \nrotateAround \n\n Rotate a triangle around a given point by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#translateBy","title":"Triangle2D.translateBy","content":"Triangle2D.translateBy \ntranslateBy \n\n Translate a triangle by a given displacement.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#translateIn","title":"Triangle2D.translateIn","content":"Triangle2D.translateIn \ntranslateIn \n\n Translate a triangle in a given direction by a given distance.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#mirrorAcross","title":"Triangle2D.mirrorAcross","content":"Triangle2D.mirrorAcross \nmirrorAcross \n\n Mirror a triangle across a given axis. Note that mirroring a triangle will\n result in its \u0027winding direction\u0027 being flipped - if the triangle\u0027s vertices\n were in counterclockwise order before mirroring, they will be in clockwise order\n afterwards and vice versa.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#relativeTo","title":"Triangle2D.relativeTo","content":"Triangle2D.relativeTo \nrelativeTo \n\n Take a triangle defined in global coordinates, and return it expressed\n in local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#placeIn","title":"Triangle2D.placeIn","content":"Triangle2D.placeIn \nplaceIn \n\n Take a triangle considered to be defined in local coordinates relative to a\n given reference frame, and return that triangle expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#contains","title":"Triangle2D.contains","content":"Triangle2D.contains \ncontains \n\n Check whether a given point is inside a given triangle. It does not matter\n whether the triangle\u0027s vertices are in clockwise or counterclockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#counterclockwiseArea","title":"Triangle2D.counterclockwiseArea","content":"Triangle2D.counterclockwiseArea \ncounterclockwiseArea \n\n Get the signed area of a triangle, returning a positive value if the\n triangle\u0027s vertices are in counterclockwise order and a negative value\n otherwise.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#clockwiseArea","title":"Triangle2D.clockwiseArea","content":"Triangle2D.clockwiseArea \nclockwiseArea \n\n Get the signed area of a triangle, returning a positive value if the\n triangle\u0027s vertices are in clockwise order and a negative value otherwise.\n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2dmodule.html#area","title":"Triangle2D.area","content":"Triangle2D.area \narea \n\n Get the area of a triangle. The result will always be positive regardless of\n whether the triangle\u0027s vertices are in clockwise or counterclockwise order.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html","title":"Vector2D","content":"Vector2D \n \nVector2D.ListTransform \nListTransform \nVector2D.Transform \nTransform \nVector2D.xy \nxy \nVector2D.xyIn \nxyIn \nVector2D.from \nfrom \nVector2D.withLength \nwithLength \nVector2D.rTheta \nrTheta \nVector2D.rThetaIn \nrThetaIn \nVector2D.polar \npolar \nVector2D.zero \nzero \nVector2D.meters \nmeters \nVector2D.pixels \npixels \nVector2D.millimeters \nmillimeters \nVector2D.centimeters \ncentimeters \nVector2D.inches \ninches \nVector2D.feet \nfeet \nVector2D.magnitude \nmagnitude \nVector2D.length \nlength \nVector2D.components \ncomponents \nVector2D.x \nx \nVector2D.y \ny \nVector2D.plus \nplus \nVector2D.sum \nsum \nVector2D.minus \nminus \nVector2D.times \ntimes \nVector2D.cross \ncross \nVector2D.scaleBy \nscaleBy \nVector2D.dividedBy \ndividedBy \nVector2D.neg \nneg \nVector2D.twice \ntwice \nVector2D.half \nhalf \nVector2D.scaleTo \nscaleTo \nVector2D.rotateBy \nrotateBy \nVector2D.rotateByCounterClockwise \nrotateByCounterClockwise \nVector2D.rotateByClockwise \nrotateByClockwise \nVector2D.rotateClockwise \nrotateClockwise \nVector2D.rotateCounterclockwise \nrotateCounterclockwise \nVector2D.perpendicularTo \nperpendicularTo \nVector2D.normalize \nnormalize \nVector2D.round \nround \nVector2D.roundTo \nroundTo \nVector2D.componentIn \ncomponentIn \nVector2D.reverse \nreverse \nVector2D.negate \nnegate \nVector2D.mirrorAcross \nmirrorAcross \nVector2D.projectionIn \nprojectionIn \nVector2D.projectOnto \nprojectOnto \nVector2D.relativeTo \nrelativeTo \nVector2D.placeIn \nplaceIn \nVector2D.distanceSquaredTo \ndistanceSquaredTo \nVector2D.distanceTo \ndistanceTo \nVector2D.midVector \nmidVector \nVector2D.dotProduct \ndotProduct \nVector2D.crossProduct \ncrossProduct \nVector2D.direction \ndirection \nVector2D.equalWithin \nequalWithin \nVector2D.fromList \nfromList \nVector2D.toList \ntoList"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#xy","title":"Vector2D.xy","content":"Vector2D.xy \nxy \n\n Construct a Vector2D object from the x and y lengths.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#xyIn","title":"Vector2D.xyIn","content":"Vector2D.xyIn \nxyIn \n\n Construct a vector given its local components within a particular frame\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#from","title":"Vector2D.from","content":"Vector2D.from \nfrom \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#withLength","title":"Vector2D.withLength","content":"Vector2D.withLength \nwithLength \n\n Construct a vector with the given length in the given direction.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rTheta","title":"Vector2D.rTheta","content":"Vector2D.rTheta \nrTheta \n\n Construct a vector using polar coordinates coordinates given a length and angle\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rThetaIn","title":"Vector2D.rThetaIn","content":"Vector2D.rThetaIn \nrThetaIn \n\n Construct a vector given its local polar components within a particular\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#polar","title":"Vector2D.polar","content":"Vector2D.polar \npolar \n\n Alias for \u0060rTheta\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#zero","title":"Vector2D.zero","content":"Vector2D.zero \nzero \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#meters","title":"Vector2D.meters","content":"Vector2D.meters \nmeters \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#pixels","title":"Vector2D.pixels","content":"Vector2D.pixels \npixels \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#millimeters","title":"Vector2D.millimeters","content":"Vector2D.millimeters \nmillimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#centimeters","title":"Vector2D.centimeters","content":"Vector2D.centimeters \ncentimeters \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#inches","title":"Vector2D.inches","content":"Vector2D.inches \ninches \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#feet","title":"Vector2D.feet","content":"Vector2D.feet \nfeet \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#magnitude","title":"Vector2D.magnitude","content":"Vector2D.magnitude \nmagnitude \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#length","title":"Vector2D.length","content":"Vector2D.length \nlength \n\n Alias for \u0060Vector2D.magnitude\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#components","title":"Vector2D.components","content":"Vector2D.components \ncomponents \n\n Get the X and Y components of a vector as a tuple.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#x","title":"Vector2D.x","content":"Vector2D.x \nx \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#y","title":"Vector2D.y","content":"Vector2D.y \ny \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#plus","title":"Vector2D.plus","content":"Vector2D.plus \nplus \n\n This function is designed to be used in piping operators.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#sum","title":"Vector2D.sum","content":"Vector2D.sum \nsum \n\n Find the sum of a list of vectors.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#minus","title":"Vector2D.minus","content":"Vector2D.minus \nminus \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#times","title":"Vector2D.times","content":"Vector2D.times \ntimes \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#cross","title":"Vector2D.cross","content":"Vector2D.cross \ncross \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#scaleBy","title":"Vector2D.scaleBy","content":"Vector2D.scaleBy \nscaleBy \n\n Alias for \u0060Vector2D.times\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#dividedBy","title":"Vector2D.dividedBy","content":"Vector2D.dividedBy \ndividedBy \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#neg","title":"Vector2D.neg","content":"Vector2D.neg \nneg \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#twice","title":"Vector2D.twice","content":"Vector2D.twice \ntwice \n\n Shorthand for \u0060Vector2D.scaleBy 2\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#half","title":"Vector2D.half","content":"Vector2D.half \nhalf \n\n Shorthand for \u0060Vector2D.scaleBy 0.5\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#scaleTo","title":"Vector2D.scaleTo","content":"Vector2D.scaleTo \nscaleTo \n\n Scale a vector to a given length.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rotateBy","title":"Vector2D.rotateBy","content":"Vector2D.rotateBy \nrotateBy \n\n Rotate a vector counterclockwise by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rotateByCounterClockwise","title":"Vector2D.rotateByCounterClockwise","content":"Vector2D.rotateByCounterClockwise \nrotateByCounterClockwise \n\n Rotate a vector counterClockwise by a given angle. Alias for \u0060rotateBy\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rotateByClockwise","title":"Vector2D.rotateByClockwise","content":"Vector2D.rotateByClockwise \nrotateByClockwise \n\n Rotate a vector clockwise by a given angle.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rotateClockwise","title":"Vector2D.rotateClockwise","content":"Vector2D.rotateClockwise \nrotateClockwise \n\n Rotate the given vector 90 degrees counterclockwise;\n     Vector2D.rotateCounterclockwise vector\n is equivalent to\n     Vector2D.rotateBy (Angle.degrees 90) vector\n but is more efficient.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#rotateCounterclockwise","title":"Vector2D.rotateCounterclockwise","content":"Vector2D.rotateCounterclockwise \nrotateCounterclockwise \n\n Rotate the given vector 90 degrees clockwise;\n     Vector2D.rotateClockwise vector\n is equivalent to\n     Vector2D.rotateBy (Angle.degrees -90) vector\n but is more efficient.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#perpendicularTo","title":"Vector2D.perpendicularTo","content":"Vector2D.perpendicularTo \nperpendicularTo \n\n Construct a vector perpendicular to the given vector, by rotating the given\n vector 90 degrees counterclockwise. The constructed vector will have the same\n length as the given vector. Alias for \u0060Vector2D.rotateCounterclockwise\u0060.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#normalize","title":"Vector2D.normalize","content":"Vector2D.normalize \nnormalize \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#round","title":"Vector2D.round","content":"Vector2D.round \nround \n\n Round the vector to the internal precision.\n (Default is 8 digits past the decimal point)\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#roundTo","title":"Vector2D.roundTo","content":"Vector2D.roundTo \nroundTo \n\n Round the vector to a specified number of digits\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#componentIn","title":"Vector2D.componentIn","content":"Vector2D.componentIn \ncomponentIn \n\n Find the component of a vector in an arbitrary direction, for example\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#reverse","title":"Vector2D.reverse","content":"Vector2D.reverse \nreverse \n\n Reverse the direction of a vector, negating its components.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#negate","title":"Vector2D.negate","content":"Vector2D.negate \nnegate \n\n Alias for \u0060Vector2D.reverse\u0060\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#mirrorAcross","title":"Vector2D.mirrorAcross","content":"Vector2D.mirrorAcross \nmirrorAcross \n\n Mirror a vector across a given axis.\n The position of the axis doesn\u0027t matter, only its orientation:\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#projectionIn","title":"Vector2D.projectionIn","content":"Vector2D.projectionIn \nprojectionIn \n\n Find the projection of a vector in a particular direction. Conceptually,\n this means splitting the original vector into a portion parallel to the given\n direction and a portion perpendicular to it, then returning the parallel\n portion.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#projectOnto","title":"Vector2D.projectOnto","content":"Vector2D.projectOnto \nprojectOnto \n\n Project a vector onto an axis.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#relativeTo","title":"Vector2D.relativeTo","content":"Vector2D.relativeTo \nrelativeTo \n\n Take a vector defined in global coordinates, and return it expressed in\n local coordinates relative to a given reference frame.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#placeIn","title":"Vector2D.placeIn","content":"Vector2D.placeIn \nplaceIn \n\n Take a vector defined in local coordinates relative to a given reference\n frame, and return that vector expressed in global coordinates.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#distanceSquaredTo","title":"Vector2D.distanceSquaredTo","content":"Vector2D.distanceSquaredTo \ndistanceSquaredTo \n\n Get the distance between two vectors squared. This function can be used to\n optimize some algorithms because you remove a square root call from the\n calculation which can be an expensive operation.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#distanceTo","title":"Vector2D.distanceTo","content":"Vector2D.distanceTo \ndistanceTo \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#midVector","title":"Vector2D.midVector","content":"Vector2D.midVector \nmidVector \n\n Get the vector that is the average of two vectors.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#dotProduct","title":"Vector2D.dotProduct","content":"Vector2D.dotProduct \ndotProduct \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#crossProduct","title":"Vector2D.crossProduct","content":"Vector2D.crossProduct \ncrossProduct \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#direction","title":"Vector2D.direction","content":"Vector2D.direction \ndirection \n\n Get the direction the a vector is facing.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#equalWithin","title":"Vector2D.equalWithin","content":"Vector2D.equalWithin \nequalWithin \n\n Compare two vectors within a tolerance. Returns true if the difference\n between the two given vectors has magnitude less than the given tolerance.\n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#fromList","title":"Vector2D.fromList","content":"Vector2D.fromList \nfromList \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule.html#toList","title":"Vector2D.toList","content":"Vector2D.toList \ntoList \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule-listtransform.html","title":"ListTransform","content":"ListTransform \n \nListTransform.( .ctor ) \n( .ctor )"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule-listtransform.html#( .ctor )","title":"ListTransform.( .ctor )","content":"ListTransform.( .ctor ) \n( .ctor ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule-transform.html","title":"Transform","content":"Transform \n \nTransform.( .ctor ) \n( .ctor )"},{"uri":"/fsharp-geometry/reference/geometry-vector2dmodule-transform.html#( .ctor )","title":"Transform.( .ctor )","content":"Transform.( .ctor ) \n( .ctor ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html","title":"Angle","content":"Angle \n \nAngle.Comparison \nComparison \nAngle.Equals \nEquals \nAngle.LessThan \nLessThan \nAngle.normalize \nnormalize \nAngle.( \u002B ) \n( \u002B ) \nAngle.( / ) \n( / ) \nAngle.( / ) \n( / ) \nAngle.( * ) \n( * ) \nAngle.( * ) \n( * ) \nAngle.( - ) \n( - ) \nAngle.( ~- ) \n( ~- ) \nAngle.Radians \nRadians"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#Comparison","title":"Angle.Comparison","content":"Angle.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#Equals","title":"Angle.Equals","content":"Angle.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#LessThan","title":"Angle.LessThan","content":"Angle.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#normalize","title":"Angle.normalize","content":"Angle.normalize \nnormalize \n\n Convert an arbitrary angle to the equivalent angle in the range -180 to 180\n degrees (-\u03C0 to \u03C0 radians), by adding or subtracting some multiple of 360\n degrees (2\u03C0 radians) if necessary.\n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( \u002B )","title":"Angle.( \u002B )","content":"Angle.( \u002B ) \n( \u002B ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( / )","title":"Angle.( / )","content":"Angle.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( / )","title":"Angle.( / )","content":"Angle.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( * )","title":"Angle.( * )","content":"Angle.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( * )","title":"Angle.( * )","content":"Angle.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( - )","title":"Angle.( - )","content":"Angle.( - ) \n( - ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#( ~- )","title":"Angle.( ~- )","content":"Angle.( ~- ) \n( ~- ) \n"},{"uri":"/fsharp-geometry/reference/geometry-angle.html#Radians","title":"Angle.Radians","content":"Angle.Radians \nRadians \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2d-2.html","title":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nArc2D\u003C\u0027Unit, \u0027Coordinates\u003E.StartPoint \nStartPoint \nArc2D\u003C\u0027Unit, \u0027Coordinates\u003E.XDirection \nXDirection \nArc2D\u003C\u0027Unit, \u0027Coordinates\u003E.SignedLength \nSignedLength \nArc2D\u003C\u0027Unit, \u0027Coordinates\u003E.SweptAngle \nSweptAngle"},{"uri":"/fsharp-geometry/reference/geometry-arc2d-2.html#StartPoint","title":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.StartPoint","content":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.StartPoint \nStartPoint \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2d-2.html#XDirection","title":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.XDirection","content":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.XDirection \nXDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2d-2.html#SignedLength","title":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.SignedLength","content":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.SignedLength \nSignedLength \n"},{"uri":"/fsharp-geometry/reference/geometry-arc2d-2.html#SweptAngle","title":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.SweptAngle","content":"Arc2D\u003C\u0027Unit, \u0027Coordinates\u003E.SweptAngle \nSweptAngle \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2d-2.html","title":"Axis2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Axis2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nAxis2D\u003C\u0027Unit, \u0027Coordinates\u003E.Origin \nOrigin \nAxis2D\u003C\u0027Unit, \u0027Coordinates\u003E.Direction \nDirection"},{"uri":"/fsharp-geometry/reference/geometry-axis2d-2.html#Origin","title":"Axis2D\u003C\u0027Unit, \u0027Coordinates\u003E.Origin","content":"Axis2D\u003C\u0027Unit, \u0027Coordinates\u003E.Origin \nOrigin \n"},{"uri":"/fsharp-geometry/reference/geometry-axis2d-2.html#Direction","title":"Axis2D\u003C\u0027Unit, \u0027Coordinates\u003E.Direction","content":"Axis2D\u003C\u0027Unit, \u0027Coordinates\u003E.Direction \nDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.TopRight \nTopRight \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.BottomRight \nBottomRight \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.BottomLeft \nBottomLeft \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.TopLeft \nTopLeft \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MinX \nMinX \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MaxX \nMaxX \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MinY \nMinY \nBoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MaxY \nMaxY"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#TopRight","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.TopRight","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.TopRight \nTopRight \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#BottomRight","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.BottomRight","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.BottomRight \nBottomRight \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#BottomLeft","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.BottomLeft","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.BottomLeft \nBottomLeft \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#TopLeft","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.TopLeft","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.TopLeft \nTopLeft \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#MinX","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MinX","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MinX \nMinX \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#MaxX","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MaxX","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MaxX \nMaxX \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#MinY","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MinY","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MinY \nMinY \n"},{"uri":"/fsharp-geometry/reference/geometry-boundingbox2d-2.html#MaxY","title":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MaxY","content":"BoundingBox2D\u003C\u0027Unit, \u0027Coordinates\u003E.MaxY \nMaxY \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2d-2.html","title":"Circle2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Circle2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nCircle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Center \nCenter \nCircle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Radius \nRadius"},{"uri":"/fsharp-geometry/reference/geometry-circle2d-2.html#Center","title":"Circle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Center","content":"Circle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Center \nCenter \n"},{"uri":"/fsharp-geometry/reference/geometry-circle2d-2.html#Radius","title":"Circle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Radius","content":"Circle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Radius \nRadius \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html","title":"Direction2D\u003C\u0027Coordinates\u003E","content":"Direction2D\u003C\u0027Coordinates\u003E \n \nDirection2D\u003C\u0027Coordinates\u003E.Comparison \nComparison \nDirection2D\u003C\u0027Coordinates\u003E.Equals \nEquals \nDirection2D\u003C\u0027Coordinates\u003E.LessThan \nLessThan \nDirection2D\u003C\u0027Coordinates\u003E.xy \nxy \nDirection2D\u003C\u0027Coordinates\u003E.xyLength \nxyLength \nDirection2D\u003C\u0027Coordinates\u003E.X \nX \nDirection2D\u003C\u0027Coordinates\u003E.Y \nY"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#Comparison","title":"Direction2D\u003C\u0027Coordinates\u003E.Comparison","content":"Direction2D\u003C\u0027Coordinates\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#Equals","title":"Direction2D\u003C\u0027Coordinates\u003E.Equals","content":"Direction2D\u003C\u0027Coordinates\u003E.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#LessThan","title":"Direction2D\u003C\u0027Coordinates\u003E.LessThan","content":"Direction2D\u003C\u0027Coordinates\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#xy","title":"Direction2D\u003C\u0027Coordinates\u003E.xy","content":"Direction2D\u003C\u0027Coordinates\u003E.xy \nxy \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#xyLength","title":"Direction2D\u003C\u0027Coordinates\u003E.xyLength","content":"Direction2D\u003C\u0027Coordinates\u003E.xyLength \nxyLength \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#X","title":"Direction2D\u003C\u0027Coordinates\u003E.X","content":"Direction2D\u003C\u0027Coordinates\u003E.X \nX \n"},{"uri":"/fsharp-geometry/reference/geometry-direction2d-1.html#Y","title":"Direction2D\u003C\u0027Coordinates\u003E.Y","content":"Direction2D\u003C\u0027Coordinates\u003E.Y \nY \n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d-2.html","title":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nEllipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.Axes \nAxes \nEllipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.XRadius \nXRadius \nEllipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.YRadius \nYRadius"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d-2.html#Axes","title":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.Axes","content":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.Axes \nAxes \n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d-2.html#XRadius","title":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.XRadius","content":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.XRadius \nXRadius \n"},{"uri":"/fsharp-geometry/reference/geometry-ellipse2d-2.html#YRadius","title":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.YRadius","content":"Ellipse2D\u003C\u0027Unit, \u0027Coordinates\u003E.YRadius \nYRadius \n"},{"uri":"/fsharp-geometry/reference/geometry-float.html","title":"Float","content":"Float \n \nFloat.( .ctor ) \n( .ctor ) \nFloat.Epsilon \nEpsilon \nFloat.DigitPrecision \nDigitPrecision"},{"uri":"/fsharp-geometry/reference/geometry-float.html#( .ctor )","title":"Float.( .ctor )","content":"Float.( .ctor ) \n( .ctor ) \n"},{"uri":"/fsharp-geometry/reference/geometry-float.html#Epsilon","title":"Float.Epsilon","content":"Float.Epsilon \nEpsilon \n"},{"uri":"/fsharp-geometry/reference/geometry-float.html#DigitPrecision","title":"Float.DigitPrecision","content":"Float.DigitPrecision \nDigitPrecision \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2d-3.html","title":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E","content":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E \n \nFrame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.Origin \nOrigin \nFrame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.XDirection \nXDirection \nFrame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.YDirection \nYDirection"},{"uri":"/fsharp-geometry/reference/geometry-frame2d-3.html#Origin","title":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.Origin","content":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.Origin \nOrigin \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2d-3.html#XDirection","title":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.XDirection","content":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.XDirection \nXDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-frame2d-3.html#YDirection","title":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.YDirection","content":"Frame2D\u003C\u0027Unit, \u0027Coordinates, \u0027Defines\u003E.YDirection \nYDirection \n"},{"uri":"/fsharp-geometry/reference/geometry-interval-1.html","title":"Interval\u003C\u0027T\u003E","content":"Interval\u003C\u0027T\u003E \n\n A finite, closed interval with a minimum and maximum number. This can\n represent an interval of any type.\n\n For example...\n     Interval float\n     Interval int\n     Interval Angle\n \nInterval\u003C\u0027T\u003E.Interval \nInterval"},{"uri":"/fsharp-geometry/reference/geometry-interval-1.html#Interval","title":"Interval\u003C\u0027T\u003E.Interval","content":"Interval\u003C\u0027T\u003E.Interval \nInterval \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html","title":"Length\u003C\u0027Unit\u003E","content":"Length\u003C\u0027Unit\u003E \n \nLength\u003C\u0027Unit\u003E.Comparison \nComparison \nLength\u003C\u0027Unit\u003E.Equals \nEquals \nLength\u003C\u0027Unit\u003E.LessThan \nLessThan \nLength\u003C\u0027Unit\u003E.Pow \nPow \nLength\u003C\u0027Unit\u003E.create \ncreate \nLength\u003C\u0027Unit\u003E.( \u002B ) \n( \u002B ) \nLength\u003C\u0027Unit\u003E.( / ) \n( / ) \nLength\u003C\u0027Unit\u003E.( / ) \n( / ) \nLength\u003C\u0027Unit\u003E.( / ) \n( / ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( * ) \n( * ) \nLength\u003C\u0027Unit\u003E.( - ) \n( - ) \nLength\u003C\u0027Unit\u003E.( ~- ) \n( ~- ) \nLength\u003C\u0027Unit\u003E.Length \nLength"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#Comparison","title":"Length\u003C\u0027Unit\u003E.Comparison","content":"Length\u003C\u0027Unit\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#Equals","title":"Length\u003C\u0027Unit\u003E.Equals","content":"Length\u003C\u0027Unit\u003E.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#LessThan","title":"Length\u003C\u0027Unit\u003E.LessThan","content":"Length\u003C\u0027Unit\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#Pow","title":"Length\u003C\u0027Unit\u003E.Pow","content":"Length\u003C\u0027Unit\u003E.Pow \nPow \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#create","title":"Length\u003C\u0027Unit\u003E.create","content":"Length\u003C\u0027Unit\u003E.create \ncreate \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( \u002B )","title":"Length\u003C\u0027Unit\u003E.( \u002B )","content":"Length\u003C\u0027Unit\u003E.( \u002B ) \n( \u002B ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( / )","title":"Length\u003C\u0027Unit\u003E.( / )","content":"Length\u003C\u0027Unit\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( / )","title":"Length\u003C\u0027Unit\u003E.( / )","content":"Length\u003C\u0027Unit\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( / )","title":"Length\u003C\u0027Unit\u003E.( / )","content":"Length\u003C\u0027Unit\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( * )","title":"Length\u003C\u0027Unit\u003E.( * )","content":"Length\u003C\u0027Unit\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( - )","title":"Length\u003C\u0027Unit\u003E.( - )","content":"Length\u003C\u0027Unit\u003E.( - ) \n( - ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#( ~- )","title":"Length\u003C\u0027Unit\u003E.( ~- )","content":"Length\u003C\u0027Unit\u003E.( ~- ) \n( ~- ) \n"},{"uri":"/fsharp-geometry/reference/geometry-length-1.html#Length","title":"Length\u003C\u0027Unit\u003E.Length","content":"Length\u003C\u0027Unit\u003E.Length \nLength \n"},{"uri":"/fsharp-geometry/reference/geometry-line2d-2.html","title":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nLine2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \nLine2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \nLine2D\u003C\u0027Unit, \u0027Coordinates\u003E.Start \nStart \nLine2D\u003C\u0027Unit, \u0027Coordinates\u003E.Finish \nFinish"},{"uri":"/fsharp-geometry/reference/geometry-line2d-2.html#Comparison","title":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison","content":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-line2d-2.html#LessThan","title":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan","content":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-line2d-2.html#Start","title":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.Start","content":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.Start \nStart \n"},{"uri":"/fsharp-geometry/reference/geometry-line2d-2.html#Finish","title":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.Finish","content":"Line2D\u003C\u0027Unit, \u0027Coordinates\u003E.Finish \nFinish \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Start \nStart \nLineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Finish \nFinish"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#Comparison","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#LessThan","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#( / )","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / )","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#( / )","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / )","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#( * )","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * )","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#( * )","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * )","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#Start","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Start","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Start \nStart \n"},{"uri":"/fsharp-geometry/reference/geometry-linesegment2d-2.html#Finish","title":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Finish","content":"LineSegment2D\u003C\u0027Unit, \u0027Coordinates\u003E.Finish \nFinish \n"},{"uri":"/fsharp-geometry/reference/geometry-meters.html","title":"Meters","content":"Meters \n \nMeters.Meters \nMeters"},{"uri":"/fsharp-geometry/reference/geometry-meters.html#Meters","title":"Meters.Meters","content":"Meters.Meters \nMeters \n"},{"uri":"/fsharp-geometry/reference/geometry-nondegenerate-2.html","title":"Nondegenerate\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Nondegenerate\u003C\u0027Unit, \u0027Coordinates\u003E \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html","title":"Percent","content":"Percent \n\n A percentage value. The default range for percentages is 0 to 1 but can also be given in the range 0 to 100.\n \nPercent.Comparison \nComparison \nPercent.Equals \nEquals \nPercent.LessThan \nLessThan \nPercent.( \u002B ) \n( \u002B ) \nPercent.( / ) \n( / ) \nPercent.( / ) \n( / ) \nPercent.( * ) \n( * ) \nPercent.( * ) \n( * ) \nPercent.( - ) \n( - ) \nPercent.Percent \nPercent"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#Comparison","title":"Percent.Comparison","content":"Percent.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#Equals","title":"Percent.Equals","content":"Percent.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#LessThan","title":"Percent.LessThan","content":"Percent.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#( \u002B )","title":"Percent.( \u002B )","content":"Percent.( \u002B ) \n( \u002B ) \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#( / )","title":"Percent.( / )","content":"Percent.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#( / )","title":"Percent.( / )","content":"Percent.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#( * )","title":"Percent.( * )","content":"Percent.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#( * )","title":"Percent.( * )","content":"Percent.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#( - )","title":"Percent.( - )","content":"Percent.( - ) \n( - ) \n"},{"uri":"/fsharp-geometry/reference/geometry-percent.html#Percent","title":"Percent.Percent","content":"Percent.Percent \nPercent \n"},{"uri":"/fsharp-geometry/reference/geometry-pixels.html","title":"Pixels","content":"Pixels \n \nPixels.Pixels \nPixels"},{"uri":"/fsharp-geometry/reference/geometry-pixels.html#Pixels","title":"Pixels.Pixels","content":"Pixels.Pixels \nPixels \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals \nEquals \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( \u002B ) \n( \u002B ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - ) \n( - ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - ) \n( - ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.( ~- ) \n( ~- ) \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.X \nX \nPoint2D\u003C\u0027Unit, \u0027Coordinates\u003E.Y \nY"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#Comparison","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#Equals","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#LessThan","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( \u002B )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( \u002B )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( \u002B ) \n( \u002B ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( / )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( * )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( * )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( - )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - ) \n( - ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( - )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - ) \n( - ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#( ~- )","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( ~- )","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.( ~- ) \n( ~- ) \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#X","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.X","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.X \nX \n"},{"uri":"/fsharp-geometry/reference/geometry-point2d-2.html#Y","title":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.Y","content":"Point2D\u003C\u0027Unit, \u0027Coordinates\u003E.Y \nY \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2d-2.html","title":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nPolygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \nPolygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals \nEquals \nPolygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \nPolygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.OuterLoop \nOuterLoop \nPolygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.InnerLoops \nInnerLoops"},{"uri":"/fsharp-geometry/reference/geometry-polygon2d-2.html#Comparison","title":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison","content":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2d-2.html#Equals","title":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals","content":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2d-2.html#LessThan","title":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan","content":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2d-2.html#OuterLoop","title":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.OuterLoop","content":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.OuterLoop \nOuterLoop \n"},{"uri":"/fsharp-geometry/reference/geometry-polygon2d-2.html#InnerLoops","title":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.InnerLoops","content":"Polygon2D\u003C\u0027Unit, \u0027Coordinates\u003E.InnerLoops \nInnerLoops \n"},{"uri":"/fsharp-geometry/reference/geometry-polyline2d-2.html","title":"Polyline2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Polyline2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nPolyline2D\u003C\u0027Unit, \u0027Coordinates\u003E.Polyline2D \nPolyline2D"},{"uri":"/fsharp-geometry/reference/geometry-polyline2d-2.html#Polyline2D","title":"Polyline2D\u003C\u0027Unit, \u0027Coordinates\u003E.Polyline2D","content":"Polyline2D\u003C\u0027Unit, \u0027Coordinates\u003E.Polyline2D \nPolyline2D \n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2d-2.html","title":"Rectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Rectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nRectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Axes \nAxes \nRectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Dimensions \nDimensions"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2d-2.html#Axes","title":"Rectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Axes","content":"Rectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Axes \nAxes \n"},{"uri":"/fsharp-geometry/reference/geometry-rectangle2d-2.html#Dimensions","title":"Rectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Dimensions","content":"Rectangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.Dimensions \nDimensions \n"},{"uri":"/fsharp-geometry/reference/geometry-size2d-1.html","title":"Size2D\u003C\u0027Unit\u003E","content":"Size2D\u003C\u0027Unit\u003E \n \nSize2D\u003C\u0027Unit\u003E.Width \nWidth \nSize2D\u003C\u0027Unit\u003E.Height \nHeight"},{"uri":"/fsharp-geometry/reference/geometry-size2d-1.html#Width","title":"Size2D\u003C\u0027Unit\u003E.Width","content":"Size2D\u003C\u0027Unit\u003E.Width \nWidth \n"},{"uri":"/fsharp-geometry/reference/geometry-size2d-1.html#Height","title":"Size2D\u003C\u0027Unit\u003E.Height","content":"Size2D\u003C\u0027Unit\u003E.Height \nHeight \n"},{"uri":"/fsharp-geometry/reference/geometry-sweptangle.html","title":"SweptAngle","content":"SweptAngle \n \nSweptAngle.SmallPositive \nSmallPositive \nSweptAngle.SmallNegative \nSmallNegative \nSweptAngle.LargePositive \nLargePositive \nSweptAngle.LargeNegative \nLargeNegative"},{"uri":"/fsharp-geometry/reference/geometry-sweptangle.html#SmallPositive","title":"SweptAngle.SmallPositive","content":"SweptAngle.SmallPositive \nSmallPositive \n"},{"uri":"/fsharp-geometry/reference/geometry-sweptangle.html#SmallNegative","title":"SweptAngle.SmallNegative","content":"SweptAngle.SmallNegative \nSmallNegative \n"},{"uri":"/fsharp-geometry/reference/geometry-sweptangle.html#LargePositive","title":"SweptAngle.LargePositive","content":"SweptAngle.LargePositive \nLargePositive \n"},{"uri":"/fsharp-geometry/reference/geometry-sweptangle.html#LargeNegative","title":"SweptAngle.LargeNegative","content":"SweptAngle.LargeNegative \nLargeNegative \n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2d-2.html","title":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nTriangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P1 \nP1 \nTriangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P2 \nP2 \nTriangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P3 \nP3"},{"uri":"/fsharp-geometry/reference/geometry-triangle2d-2.html#P1","title":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P1","content":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P1 \nP1 \n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2d-2.html#P2","title":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P2","content":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P2 \nP2 \n"},{"uri":"/fsharp-geometry/reference/geometry-triangle2d-2.html#P3","title":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P3","content":"Triangle2D\u003C\u0027Unit, \u0027Coordinates\u003E.P3 \nP3 \n"},{"uri":"/fsharp-geometry/reference/geometry-unitless.html","title":"Unitless","content":"Unitless \n \nUnitless.Unitless \nUnitless"},{"uri":"/fsharp-geometry/reference/geometry-unitless.html#Unitless","title":"Unitless.Unitless","content":"Unitless.Unitless \nUnitless \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E \n \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals \nEquals \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( \u002B ) \n( \u002B ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - ) \n( - ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( ~- ) \n( ~- ) \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.X \nX \nVector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Y \nY"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#Comparison","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Comparison \nComparison \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#Equals","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Equals \nEquals \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#LessThan","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.LessThan \nLessThan \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( \u002B )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( \u002B )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( \u002B ) \n( \u002B ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( / )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( / )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( / ) \n( / ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( * )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( * )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( * ) \n( * ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( - )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( - ) \n( - ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#( ~- )","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( ~- )","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.( ~- ) \n( ~- ) \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#X","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.X","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.X \nX \n"},{"uri":"/fsharp-geometry/reference/geometry-vector2d-2.html#Y","title":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Y","content":"Vector2D\u003C\u0027Unit, \u0027Coordinates\u003E.Y \nY \n"},{"uri":"/fsharp-geometry/reference/geometry-internal-boundingbox2d.html","title":"BoundingBox2D","content":"BoundingBox2D \n \nBoundingBox2D.from \nfrom"},{"uri":"/fsharp-geometry/reference/geometry-internal-boundingbox2d.html#from","title":"BoundingBox2D.from","content":"BoundingBox2D.from \nfrom \n"},{"uri":"/fsharp-geometry/index.html","title":"FSharp Geometry Package","content":"(**\n\n---\ntitle: FSharp Geometry Package\n---\n\nThis package is intended to be a port and extension of the framework [elm-geometry](https://package.elm-lang.org/packages/ianmackenzie/elm-geometry/latest/).\nIt focuses on providing as many interfaces for geometric objects an manipulation in a way that is type safe and\nconvenient.\n\nThis framework is currently in alpha development and is currently working on building out 2D development and\nfunctionality first before moving to expand into 3D objects.\n\n*)\n(*** hide ***)\n\n#r \u0022../Geometry/bin/Debug/net6.0/Geometry.dll\u0022\n(** *)\n\n(**\nTo use this framework you include the package through the namespace\n*)\nopen Geometry\n\n(**\nYou can then create a variety of geometric objects like points, vectors, angles, ...\n*)\n\nPoint2D.pixels 100. 200.\n\nVector2D.meters 4. 4.\n\nAngle.degrees 30.\n(**\n\n# Overview\n| Tutorial | Api |\n|----------|-----|\n| [Vector](vector.html) | [2D](reference/geometry-vector2dmodule.html) |\n| [Point](point.html) | [2D](reference/geometry-point2dmodule.html) |\n| [Direction](direction.html) | [2D](reference/geometry-direction2dmodule.html) |\n| [Frame](frame.html) | [2D](reference/geometry-frame2dmodule.html) |\n| [Axes](axes.html) | [2D](reference/geometry-axes2dmodule.html) |\n| [Line Segment](line-segment.html) | [2D](reference/geometry-linesegment2dmodule.html) |\n| [Triangle](triangle.html) | [2D](reference/geometry-triangle2dmodule.html) |\n| [Circle](circle.html) | [2D](reference/geometry-circle2dmodule.html) |\n| [Ellipse](ellipse.html) | [2D](reference/geometry-ellipse2dmodule.html) |\n| [Arc](arc.html) | [2D](reference/geometry-arc2dmodule.html) |\n| [Polyline](polyline.html) | [2D](reference/geometry-polyline2dmodule.html) |\n| [Polygon](polygon.html) | [2D](reference/geometry-polygon2dmodule.html) |\n| [Size ](size.html) | [2D](reference/geometry-size2dmodule.html) |\n| [Bounding Box](bounding-box.html) | [2D](reference/geometry-boundingbox2dmodule.html) |\n\n*)"}]